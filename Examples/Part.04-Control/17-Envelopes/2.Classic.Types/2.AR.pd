#N canvas 326 70 845 688 12;
#X declare -path else;
#X obj 41 260 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 94 233 *~;
#X obj 40 171 osc~ 440;
#X obj 94 273 out~;
#X text 30 98 Here we have an attack stage of 50 ms and a release stage of 450 ms - the total duration of the envelope is 500 ms.;
#X obj 112 182 envgen~ 50 1 450 0;
#X text 61 351 0;
#X text 61 252 1;
#X obj 41 226 s2f~;
#X obj 612 21 declare -path else;
#X obj 522 289 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 577 258 *~;
#X obj 523 196 osc~ 440;
#X obj 577 298 out~;
#X text 542 380 0;
#X text 542 281 1;
#X obj 522 255 s2f~;
#X text 627 148 exponential;
#X obj 284 263 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 337 236 *~;
#X obj 283 174 osc~ 440;
#X obj 337 276 out~;
#X text 304 354 0;
#X text 304 255 1;
#X obj 284 229 s2f~;
#X obj 355 185 vline~;
#X msg 355 158 1 50 \, 0 450 50;
#X text 30 18 An "AR" envelope has an "attack" and a "release" stage. The attack is the first stage that starts at 0 and goes to the peak amplitude. Right after the attack is finished we have the release stage going back to 0 - let's see this first implemented with [envgen~] and [vline~] \, both linearly .;
#X obj 595 207 envgen~ 50 1 450 0;
#X obj 37 548 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 92 517 *~;
#X obj 38 455 osc~ 440;
#X obj 92 557 out~;
#X text 57 639 0;
#X text 57 540 1;
#X obj 37 514 s2f~;
#X obj 110 466 adsr~ 50 450 0 0;
#X obj 219 501 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 718 242 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 704 270 status;
#X text 262 553 Note that the [envgen~] object also has a status output and how the [adsr~] object can also be triggered by bangs., f 39;
#X obj 584 536 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 639 505 *~;
#X obj 585 443 osc~ 440;
#X obj 639 545 out~;
#X obj 657 416 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 604 627 0;
#X text 604 528 1;
#X obj 584 502 s2f~;
#X obj 731 489 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 657 454 asr~ 50 450;
#X text 262 449 You can also use [adsr~] with just the attack and decay stages to implement an attack+release envelope. The [asr~] object \, with just attack and release phases can also implement the same kind of envelope., f 39;
#X obj 110 428 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 595 147 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 112 150 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 611 180 initmess curve 1;
#X text 535 67 Below we also have [envgen~] with the same exponential setting used in [asr~] and [adsr~]., f 30;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 5 0 1 1;
#X connect 5 0 8 0;
#X connect 8 0 0 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 16 0 10 0;
#X connect 19 0 21 0;
#X connect 20 0 19 0;
#X connect 24 0 18 0;
#X connect 25 0 19 1;
#X connect 25 0 24 0;
#X connect 26 0 25 0;
#X connect 28 0 11 1;
#X connect 28 0 16 0;
#X connect 28 1 38 0;
#X connect 30 0 32 0;
#X connect 31 0 30 0;
#X connect 35 0 29 0;
#X connect 36 0 30 1;
#X connect 36 0 35 0;
#X connect 36 1 37 0;
#X connect 42 0 44 0;
#X connect 43 0 42 0;
#X connect 45 0 50 0;
#X connect 48 0 41 0;
#X connect 50 0 42 1;
#X connect 50 0 48 0;
#X connect 50 1 49 0;
#X connect 52 0 36 0;
#X connect 53 0 28 0;
#X connect 54 0 5 0;
#X connect 55 0 28 0;
