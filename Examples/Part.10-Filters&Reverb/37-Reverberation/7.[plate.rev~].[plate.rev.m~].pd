#N canvas 595 49 555 759 12;
#X declare -path else;
#X obj 292 278 bng 30 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#N canvas 797 186 322 336 test 0;
#X obj 36 155 osc~;
#X obj 36 257 outlet~;
#X obj 36 211 *~;
#X obj 152 151 vline~;
#X obj 36 37 inlet;
#X obj 36 125 vline~;
#X obj 36 68 trigger bang bang;
#X msg 211 122 0 50;
#X obj 211 84 delay 500;
#X msg 36 97 440 \, 880 500;
#X msg 152 111 0.5 50;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 2 1;
#X connect 4 0 6 0;
#X connect 5 0 0 0;
#X connect 6 0 9 0;
#X connect 6 1 10 0;
#X connect 6 1 8 0;
#X connect 7 0 3 0;
#X connect 8 0 7 0;
#X connect 9 0 5 0;
#X connect 10 0 3 0;
#X restore 292 321 pd test;
#X text 41 236 Check its help file for more details on how it works.;
#X obj 292 362 plate.rev~ 50 0.6 0.25 0.8 0.8, f 16;
#X text 42 130 It combines allpass filters and a feedback delay network. It has an internal filter to control the crossover frequency and high frequency dammping as [rev2~] and [rev3~]., f 65;
#X text 42 179 One important characteristic of this reverb is that it uses LFOs to modulate some of the allpass filters as a way to produce more dynamic results., f 65;
#X obj 274 25 declare -path else;
#X obj 300 414 out~;
#X text 42 67 The [plate.rev~] object is a reverb abstraction available in the ELSE library. It is based on a patch by Tom Erbe implementing the Dattorro plate stereo reverb model \, and it turns a mono input into a stereo output)., f 65;
#X obj 102 363 else/plate.rev.m~;
#A saved 50 0.5 0.25 0.75 0.5;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 139 662 out~;
#X text 305 520 The [plate.rev.m~] object is the MERDA version of [plate.rev~]., f 25;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 0 9 0;
#X connect 3 0 7 0;
#X connect 3 1 7 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
