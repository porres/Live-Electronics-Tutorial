#N canvas 400 75 782 553 12;
#X declare -path else;
#X floatatom 255 227 8 0 0 0 - - - 0;
#X obj 237 287 *~;
#X obj 255 169 nbx 5 17 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 13 #dcdcdc #000000 #000000 0 256;
#X text 230 169 dB;
#X text 47 514 original;
#X obj 255 200 db2lin;
#X obj 47 371 meter~;
#X obj 141 371 meter~;
#X obj 237 390 out~;
#X text 137 514 adjusted;
#X text 32 26 This example shows how to adjust the gain of an incoming audio \, in this case from a sample. The adjustment is made with a dB input and using [db2lin] to convert it to a ratio., f 57;
#X text 316 227 Ratio;
#X text 269 284 gain adjustment, f 10;
#X obj 255 258 f2s~ 10 1;
#X text 32 125 Compare the VU meter of the original sound with the gain adjusted one., f 57;
#X obj 585 15 declare -path else;
#X text 32 89 This way we can add gain (or boost it) with positive dB values or decrease its intensity with negative values., f 57;
#X obj 48 222 play.file~ bubul.mp3 1 1;
#X obj 580 186 level~;
#A saved 0;
#X obj 580 154 noise~;
#X obj 580 274 meter~;
#X obj 580 427 out~;
#X text 646 215 <-- [level~];
#X text 667 234 check its help file, f 9;
#X obj 421 280 noise~;
#X obj 421 363 meter~;
#X obj 421 324 dbgain~ -12;
#X text 384 187 The [dbgain~] object allows direct adjustment in dB \, check its help file., f 20;
#X text 484 55 The [level~] abstraction from ELSE performs such gain adjustment from minus infinity to +12dB. It's basically a GUI wrapper of [dbgain~]., f 35;
#X connect 0 0 13 0;
#X connect 1 0 7 0;
#X connect 1 0 8 0;
#X connect 2 0 5 0;
#X connect 5 0 0 0;
#X connect 13 0 1 1;
#X connect 17 0 1 0;
#X connect 17 0 6 0;
#X connect 18 0 20 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 24 0 26 0;
#X connect 26 0 25 0;
