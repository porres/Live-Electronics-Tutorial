#N canvas 227 23 1018 664 12;
#X declare -path else;
#X obj 525 562 *~;
#X obj 469 526 bl.saw~;
#X obj 543 525 decay2~ 50 2000;
#X obj 525 596 out~;
#X obj 130 263 count 15;
#X obj 319 19 declare -path else;
#X obj 232 270 text define -k \$0-seq;
#A set 42 40 40 45 40 49 52 52 45 43 43 47 50 54 55 55 \; 50 . 50 55 . 59 62 . 62 55 . 53 . 52 48 49;
#X obj 130 371 text get \$0-seq;
#X obj 130 316 t b f;
#X obj 130 214 tempo 160 -on;
#X obj 130 240 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X floatatom 130 426 4 0 0 0 - - - 0;
#X obj 130 450 mtof;
#X obj 235 541 *~;
#X obj 235 572 out~;
#X obj 253 506 decay2~ 50 500;
#X obj 130 344 f;
#X obj 191 318 hradio 15 1 0 2 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0;
#X floatatom 191 338 3 0 0 0 - - - 0;
#X obj 130 506 bl.square~;
#X obj 130 475 trigger float bang;
#X text 226 316 <= select sequence, f 9;
#X obj 130 399 route float;
#X floatatom 130 290 3 0 0 0 - - - 0;
#X text 276 249 click to open:;
#X text 246 369 <= get sequence values.;
#X obj 469 461 sequencer~ 150 100 80 120 60 150 100 70 100;
#X text 32 55 Now we're using a [text] object to store the values instead of an array. Not we can also use [text] as a sequencer as we'll see in the next examples. Below we have it storing an usual sequence from previous examples as its first list. And the thing about [text] is that it can store several lists and it doesn't need to be only floats \, but symbols as well., f 62;
#X text 32 145 We have a second sequence with "." symbols that are filtered out in [route float]. In practice \, these are used as rests!, f 62;
#X obj 543 421 tempo~ -on 120 100;
#X text 690 516 ELSE also provides the signal rate versions [tempo~] and [sequencer~]. The [sequencer~] object is simpler and can only take floats. It is triggered by impulses \, which is given by [tempo~]. Check their help file of both for more information., f 40;
#X obj 469 495 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 660 232 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 660 178 bng 15 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 705 308 *~;
#X obj 660 272 bl.saw~;
#X obj 723 283 decay2~ 50 2000;
#X obj 723 260 b;
#X obj 705 334 out~;
#X msg 707 178 set 50 170 90 140;
#X text 837 178 <= set a new sequence;
#X text 770 148 <= irregular tempo;
#X obj 525 365 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 660 147 tempo 120 100;
#X obj 660 112 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 525 312 list.seq 150 100 80 120 60 150 100 70 100, f 21;
#X obj 660 204 sequencer 150 100 80 120 60 150 100 70 100;
#X text 521 28 The [list.seq] and [sequencer] abstractions from ELSE are based on [text]! [sequencer] has much more features and has a special syntaxm like "-" being treated as a pause or used to join different elements to be sent at once (like chords). Check the help files for more information!;
#X text 686 112 <= turn on;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X connect 4 0 23 0;
#X connect 7 0 22 0;
#X connect 8 0 16 0;
#X connect 8 1 7 1;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 20 0;
#X connect 13 0 14 0;
#X connect 15 0 13 1;
#X connect 16 0 7 0;
#X connect 17 0 18 0;
#X connect 18 0 16 1;
#X connect 19 0 13 0;
#X connect 20 0 19 0;
#X connect 20 1 15 0;
#X connect 22 0 11 0;
#X connect 23 0 8 0;
#X connect 26 0 31 0;
#X connect 29 0 2 0;
#X connect 29 0 26 0;
#X connect 31 0 1 0;
#X connect 32 0 35 0;
#X connect 32 0 37 0;
#X connect 33 0 45 0;
#X connect 33 0 46 0;
#X connect 34 0 38 0;
#X connect 35 0 34 0;
#X connect 36 0 34 1;
#X connect 37 0 36 0;
#X connect 39 0 46 0;
#X connect 43 0 33 0;
#X connect 44 0 43 0;
#X connect 45 0 42 0;
#X connect 46 0 32 0;
