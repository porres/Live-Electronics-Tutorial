#N canvas 519 74 703 394 12;
#X declare -path else;
#X obj 424 218 setdsp~;
#X obj 475 31 declare -path else;
#X obj 63 226 trig.delay~ 1000;
#X obj 63 269 trig2bang~;
#X obj 63 144 bng 19 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 63 185 float2imp~;
#X obj 63 303 bng 21 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 223 269 trig2bang~;
#X obj 223 144 bng 19 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 223 185 float2imp~;
#X obj 223 303 bng 21 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 223 226 trig.delay2~ 1000;
#X text 42 31 The [trig.delay~] and [trig.delay2~] objects delay an impulse trigger. For [trig.delay~] \, new impulses before the delayed trigger is output reset the delay \, while in [trig.delay2~] it gets ingored., f 42;
#X obj 526 196 tgl 21 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 526 228 sig~;
#X obj 526 295 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 526 259 gatedelay~ 500;
#X text 402 72 The [gatedelay~] object delays the gate on value \, but the gate off value comes out right away (you can comnine it with [gatehold~] and [gaterelease~] for more complex gate management., f 34;
#X obj 560 339 gatedelay;
#X text 439 332 there's also a control version, f 15;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 7 0 10 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 11 0 7 0;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 16 0 15 0;
