#N canvas 278 62 834 601 12;
#X declare -path else;
#X obj 55 381 sigmund~;
#X floatatom 108 407 7 0 0 0 - - - 0;
#X text 167 400 envelope output (just in [env~), f 15;
#X obj 58 249 hsl 162 19 30 80 0 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 55 276 7 0 0 0 - - - 0;
#X obj 55 301 mtof;
#X floatatom 55 327 7 0 0 0 - - - 0;
#X obj 55 354 bl.saw~;
#X floatatom 55 447 7 0 0 0 - - - 0;
#X text 113 447 Pitch Analysis in MIDI;
#X text 41 110 Like [env~] \, [sigmund~] needs an analysis window size and step between analysis windows and the default values is the same as in [env~]. The envelope analysis output is at the right outlet and is in the same range as in [env~]. The pitch output a the left outlet is reported in MIDI. You can use this object to analyze an audio input and use the frequency to control something \, like an oscillator., f 63;
#X obj 298 218 adc~ 1;
#X obj 634 28 declare -path else;
#X obj 330 339 mtof;
#X obj 330 371 osc~;
#X obj 365 440 out~;
#X obj 298 279 moses;
#X floatatom 330 309 5 0 0 0 - - - 0;
#X obj 298 249 sigmund~;
#X obj 383 309 - 100;
#X obj 383 339 db2lin;
#X obj 383 371 f2s~ 5;
#X obj 365 406 *~;
#X text 65 521 The example above to the right uses audio input to control an oscillator. The envelope output is used to control the amplitude.;
#X obj 561 159 play.file~ violin.flac 1 1;
#X obj 593 471 *~;
#X obj 593 505 out~;
#X obj 561 275 sigmund~;
#X obj 593 395 bl.saw~ -midi;
#X obj 561 306 moses;
#X obj 593 334 - 36;
#X obj 593 363 f2s~ 10;
#X floatatom 704 347 5 0 0 0 - - - 0;
#X obj 704 370 dbtorms;
#X floatatom 704 394 5 0 0 0 - - - 0;
#X obj 704 426 f2s~ 10;
#X obj 589 195 out~;
#X text 536 75 The example below uses a violin sample instead and plays a sawtooth wave three octaves below., f 39;
#X text 41 13 [sigmund~] is a very powerful object that we'll see in other opportunities in this tutorial. It can perform envelope following as in [env~] \, but its main purpose is pitch analysis. \, where it reports frequency values from an audio input. This object can also report individual sinusoidal tracks as we'll see in the spectral processing examples., f 63;
#X connect 0 0 8 0;
#X connect 0 1 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 11 0 18 0;
#X connect 13 0 14 0;
#X connect 14 0 22 0;
#X connect 16 1 17 0;
#X connect 17 0 13 0;
#X connect 18 0 16 0;
#X connect 18 1 19 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 22 1;
#X connect 22 0 15 0;
#X connect 24 0 27 0;
#X connect 24 0 36 0;
#X connect 25 0 26 0;
#X connect 27 0 29 0;
#X connect 27 1 32 0;
#X connect 28 0 25 0;
#X connect 29 1 30 0;
#X connect 30 0 31 0;
#X connect 31 0 28 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 35 0;
#X connect 35 0 25 1;
