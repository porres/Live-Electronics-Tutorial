#N canvas 488 166 396 195 10;
#X declare -path else;
#X obj 54 136 outlet~;
#N canvas 442 492 436 254 guts 0;
#N canvas 540 206 304 252 fft 0;
#X obj 75 107 *~;
#X obj 75 135 rfft~;
#X obj 74 40 inlet~;
#X obj 75 188 outlet~;
#X obj 102 161 outlet~;
#N canvas 399 308 451 338 square 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-square 2048 float 2;
#X coords 0 1 2048 -1 200 140 1;
#X restore 231 98 graph;
#X obj 58 196 s \$0-square;
#X msg 58 170 \$1 1;
#X obj 57 229 tabreceive~ \$0-square, f 22;
#X obj 57 259 outlet~;
#X obj 135 104 s \$0-square;
#X msg 135 78 resize \$1;
#X obj 58 84 t f f;
#X obj 58 50 r \$0-size;
#X obj 58 113 * 0.5;
#X obj 58 144 else/loop;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 9 0;
#X connect 7 1 6 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X restore 90 79 pd square;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 1 1 4 0;
#X connect 2 0 0 0;
#X connect 5 0 0 1;
#X restore 68 73 pd fft;
#N canvas 0 23 450 300 ifft 0;
#X obj 130 41 inlet~;
#X obj 217 41 inlet~;
#X obj 153 146 *~ 0;
#X obj 210 166 expr 1 / $f1;
#X obj 153 101 rifft~;
#X obj 153 211 outlet~;
#X obj 210 143 r \$0-size;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 5 0;
#X connect 3 0 2 1;
#X connect 4 0 2 0;
#X connect 6 0 3 0;
#X restore 68 167 pd ifft;
#N canvas 86 387 349 300 \$0-conv 0;
#X obj 115 51 inlet~;
#X obj 198 50 inlet~;
#N canvas 190 116 483 248 \$0-clone 0;
#X restore 126 132 pd \$0-clone;
#X obj 111 213 outlet~;
#X obj 195 211 outlet~;
#X restore 68 118 pd \$0-conv;
#X obj 68 34 inlet~;
#X obj 68 207 outlet~;
#X obj 177 154 r \$0-block;
#X obj 177 180 block~;
#N canvas 0 23 598 300 save 0;
#X obj 249 76 inlet;
#X obj 259 131 s pd-\$0-clone;
#X msg 248 107 clear;
#X obj 244 160 send pd-\$0-path;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 0 3 0;
#X restore 182 114 pd save;
#X obj 182 92 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#N canvas 513 23 760 723 init 0;
#X obj 430 394 soundfiler;
#X msg 430 363 read \$1;
#X msg 606 332 set \$1 2;
#X obj 606 357 s \$0-block;
#X obj 243 236 log 2;
#X obj 243 261 expr pow(2 \, ceil($f1));
#X obj 243 182 unpack float symbol;
#X obj 313 451 sel 0;
#X obj 393 554 print error:;
#X obj 495 285 * 2;
#X obj 495 329 s \$0-size;
#X obj 243 316 trigger float float;
#X obj 495 305 trigger float float;
#X obj 229 158 list prepend 1024;
#X obj 297 497 t b f;
#X obj 318 628 list append;
#X obj 376 377 v w_\$0;
#X obj 107 524 v w_\$0;
#X obj 107 548 pack float float symbol;
#X msg 107 578 loaded \$3 with partition size = \$1 (\$2 partitions), f 25;
#X obj 188 122 route bang symbol list float;
#X obj 436 138 send pd-\$0-path;
#X msg 436 114 clear \, obj 30 20 declare -path \$1;
#N canvas 360 224 493 100 \$0-path 0;
#X restore 538 138 pd \$0-path;
#X obj 313 426 expr ceil(2*$f2/$f1);
#X obj 243 210 max 32;
#X obj 317 401 s \$0-set-change;
#X obj 318 655 list append \$0;
#X obj 495 235 log 2;
#X obj 495 260 expr pow(2 \, ceil($f1));
#X obj 495 209 max 32;
#X msg 448 251 1024;
#X obj 136 215 s pd-\$0-clone;
#X msg 136 193 clear;
#X msg 317 375 set \$1;
#X obj 416 671 r \$0-size;
#X obj 318 692 list append;
#X msg 379 57 dir;
#X obj 188 92 else/args;
#X obj 379 81 else/dir 1;
#X obj 188 62 else/loadbanger 2;
#X msg 318 727 \; pd-\$3-clone clear \, obj 100 50 inlet~ \, obj 300 50 inlet~ \, obj 100 100 clone convpartition \$1 \$2 \$3 \$4 \, obj 100 150 outlet~ \, obj 300 150 outlet~ \, connect 0 0 2 0 \, connect 2 0 3 0 \, connect 1 0 2 1 \, connect 2 1 4 0 \; pd-\$3-conv connect 0 0 2 0 \, connect 1 0 2 1 \, connect 2 0 3 0 \, connect 2 1 4 0 \; \$3-load bang;
#X obj 107 615 print [conv.abs~];
#X msg 393 510 [conv.abs~] could not load Impulse Response;
#X connect 0 0 24 1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 11 0;
#X connect 6 0 25 0;
#X connect 6 1 1 0;
#X connect 6 1 15 1;
#X connect 6 1 18 2;
#X connect 7 0 43 0;
#X connect 7 1 14 0;
#X connect 9 0 12 0;
#X connect 11 0 24 0;
#X connect 11 1 9 0;
#X connect 11 1 16 0;
#X connect 11 1 34 0;
#X connect 12 0 10 0;
#X connect 12 1 2 0;
#X connect 13 0 6 0;
#X connect 14 0 17 0;
#X connect 14 1 15 0;
#X connect 14 1 18 1;
#X connect 15 0 27 0;
#X connect 17 0 18 0;
#X connect 18 0 19 0;
#X connect 19 0 42 0;
#X connect 20 0 31 0;
#X connect 20 0 33 0;
#X connect 20 1 13 0;
#X connect 20 2 6 0;
#X connect 20 3 30 0;
#X connect 22 0 21 0;
#X connect 24 0 7 0;
#X connect 25 0 4 0;
#X connect 27 0 36 0;
#X connect 28 0 29 0;
#X connect 29 0 9 0;
#X connect 29 0 16 0;
#X connect 30 0 28 0;
#X connect 31 0 16 0;
#X connect 31 0 9 0;
#X connect 31 0 34 0;
#X connect 33 0 32 0;
#X connect 34 0 26 0;
#X connect 35 0 36 1;
#X connect 36 0 41 0;
#X connect 37 0 39 0;
#X connect 38 0 20 0;
#X connect 39 1 22 0;
#X connect 40 0 38 0;
#X connect 40 1 37 0;
#X connect 43 0 8 0;
#X restore 176 41 pd init;
#X obj 281 114 declare -path else;
#X connect 0 0 2 0;
#X connect 0 1 2 1;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 5 0 6 0;
#X connect 8 0 7 0;
#X restore 54 84 pd guts;
#X obj 54 31 inlet~;
#X text 145 76 an advanced abstraction that does partitioned convolution., f 33;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
