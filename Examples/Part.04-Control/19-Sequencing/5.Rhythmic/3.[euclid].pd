#N struct 1008-slot float x float y float slotsize float color float
width float bordercolor;
#N canvas 462 70 839 548 12;
#X declare -path else;
#X obj 665 19 declare -path else;
#X obj 99 355 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X floatatom 211 294 3 0 0 0 - - - 0;
#X obj 148 181 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000 0 1;
#X obj 148 388 out~;
#X floatatom 148 289 3 0 0 0 - - - 0;
#X floatatom 179 269 3 0 0 0 - - - 0;
#X obj 79 230 - 1;
#X msg 79 254 max \$1;
#X text 172 179 <= play;
#X obj 148 320 euclid 16 7, f 14;
#X obj 148 207 tempo 60 -div 4;
#X obj 423 37 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000;
#X msg 386 230 slots \$1;
#X obj 459 395 sel 1;
#X obj 586 230 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000
#000000 0 1;
#X obj 423 66 t b b;
#X floatatom 498 66 3 0 0 0 - - - 0;
#X floatatom 527 95 3 0 0 0 - - - 0;
#X floatatom 557 126 3 0 0 0 - - - 0;
#X obj 459 303 drum.seq 2 16 20 0 0 0 0 0 0 0 0 0 0 0 0;
#X obj 455 95 f 16;
#X obj 704 109 + 1;
#X obj 704 63 vradio 18 1 0 2 empty empty empty 0 -8 0 10 #dcdcdc #000000
#000000 0;
#X text 726 61 <= track 1;
#X text 726 80 <= track 2;
#X text 526 65 <= number of steps;
#X text 555 94 <= number of hits;
#X text 587 125 <= rotation;
#X text 446 36 <= generate sequence;
#X obj 459 363 route 1 2, f 17;
#X obj 546 395 sel 1;
#X text 610 230 <= play;
#X msg 704 137 track \$1;
#X obj 459 476 out~;
#X obj 455 126 loop;
#X obj 469 154 euclid 16 5 0;
#X obj 459 194 group;
#X obj 459 230 insert track 1;
#X obj 586 256 tempo 60 -div 4;
#X text 24 112 It takes a step number and returns if that step is a
hit or a rest depending on parameters of: number of steps \, number
of hits and rotation value., f 47;
#X text 207 268 <= number of steps;
#X text 238 293 <= divisions;
#X text 25 15 The [euclid] object generates euclidean rhythms sequences.
implements an euclidean rhythm algorithm. The euclidean rhythm algorithm
can be used to generate some world music like rhythmic sequences and
tries to divide a number of steps as equally as possible., f 47;
#X text 48 468 To the right \, we have an example where [euclid] generates
track sequences into [drum.seq]., f 47;
#X obj 148 242 count 15;
#X obj 148 355 player~ 1 dholak.aif;
#X obj 459 427 player~ 1 dholak.aif, f 10;
#X obj 546 427 player~ 1 bagal.aif, f 9;
#X connect 2 0 10 2;
#X connect 3 0 11 0;
#X connect 5 0 10 0;
#X connect 6 0 7 0;
#X connect 6 0 10 1;
#X connect 7 0 8 0;
#X connect 8 0 45 0;
#X connect 10 0 1 0;
#X connect 10 0 46 0;
#X connect 11 0 45 0;
#X connect 12 0 16 0;
#X connect 13 0 20 0;
#X connect 14 0 47 0;
#X connect 15 0 39 0;
#X connect 16 0 37 0;
#X connect 16 1 21 0;
#X connect 17 0 21 1;
#X connect 17 0 36 1;
#X connect 18 0 36 2;
#X connect 19 0 36 3;
#X connect 20 0 30 0;
#X connect 21 0 13 0;
#X connect 21 0 35 0;
#X connect 22 0 33 0;
#X connect 23 0 22 0;
#X connect 30 0 14 0;
#X connect 30 1 31 0;
#X connect 31 0 48 0;
#X connect 33 0 38 1;
#X connect 35 0 36 0;
#X connect 36 2 37 0;
#X connect 37 0 38 0;
#X connect 38 0 20 0;
#X connect 39 0 20 0;
#X connect 45 0 5 0;
#X connect 46 0 4 0;
#X connect 47 0 34 0;
#X connect 48 0 34 1;
