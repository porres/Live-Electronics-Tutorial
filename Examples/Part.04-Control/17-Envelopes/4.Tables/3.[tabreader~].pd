#N canvas 412 38 561 578 12;
#X declare -path else;
#X obj 121 452 *~;
#X obj 63 391 osc~ 440;
#X obj 177 326 nbx 5 17 0 2000 0 0 empty empty empty 0 -8 0 12 #dcdcdc #000000 #000000 0 256;
#X obj 139 324 bng 25 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 121 488 out~;
#X text 244 327 ms;
#X obj 139 391 envgen~;
#X text 340 344 Generates hann table;
#X obj 366 21 declare -path else;
#X obj 326 406 array define \$0-hann 1024;
#X obj 139 422 tabreader~ \$0-hann;
#X obj 311 500 tabreader;
#X text 390 487 control version of [tabreader~], f 15;
#X text 309 470 see also:;
#X msg 177 356 0 \$1 1;
#X obj 177 296 initmess 500;
#X text 30 78 Now let's see some more convenient solutions with more objects from ELSE. Let's have a first superficial look into [tabreader~] \, which is similar to [tabread4~] \, but by default it has an index input from 0 to 1 \, which makes us not worry about the table size and index range., f 69;
#X text 30 142 Just like [wavetable~] \, you don't need to worry about guard points. The [tabgen] object generates functions without guard points so they are a good match. By default \, the [tabreader~] object considers the input phase to be circular (which means that a phase of 1 is the same as 0). Hence \, the end of the table is actually the beginning \, which is good for looping. The default interpolation of [tabreader~] is 'spline' \, but it has other interpolation options (such as 'lagrange' that is used in [tabread4~]). We'll see more about interpolation later in this tutorial \, so hang in there., f 69;
#X obj 336 373 tabgen \$0-hann hanning;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 14 0;
#X connect 3 0 6 0;
#X connect 6 0 10 0;
#X connect 10 0 0 1;
#X connect 14 0 6 0;
#X connect 15 0 2 0;
