#N canvas 207 34 968 740 12;
#X declare -path else;
#X obj 192 143 loadbang;
#X obj 97 170 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 97 333 out~;
#X obj 97 197 sig~ 75;
#X text 102 145 Hz;
#X obj 577 128 loadbang;
#X obj 577 354 out~;
#X obj 760 24 declare -path else;
#X msg 192 168 partial 1 2.2 3 3.9 4.8 5.6 6.1 6.9 \, phase 0 0.5 0.25 0 0.1 0.9 0.75 0.1 \, amp 0.9 0.5 0.9 1 0.8 0.9 0.7 1, f 36;
#X msg 210 226 partial 1 1.7 2.4 3.1 3.8 4.5 5.2 5.9 \, phase 0.5 0 0.75 0.4 0.7 0 0.25 0.5 \, amp 0.8 1 0.7 1 0.9 0.8 0.9 1, f 38;
#X text 41 37 The [oscbank~] object from the ELSE library is a bank of oscillators made of [sine~] objects. It receives a frequency multiplier (which can be considered a fundamental) and a list of partials to multiply to (which can be ratios). You can also set the amplitude and phase of each sine wave component. Click on the messages below.;
#X text 244 310 Note it can also output a multichannel audio connection where each oscillator is in a different channel., f 38;
#X obj 97 297 oscbank~;
#X obj 577 317 oscbank~;
#X msg 577 156 partial 200 280 360 440 520 550 630 680 \, phase 0 0.5 0.25 0 0.1 0.9 0.75 0.1 \, amp 0.9 0.5 0.9 1 0.8 0.9 0.7 1, f 38;
#X msg 616 216 partial 340 400 460 520 580 660 700 740 \, phase 0.5 0 0.75 0.4 0.7 0 0.25 0.5 \, amp 0.8 1 0.7 1 0.9 0.8 0.9 1, f 38;
#X text 547 55 You can also think of the partial list as direct frequencies \, and the frequency multiplier as a ratio for transposition - note that the default multiplier is "1"., f 48;
#X msg 623 275 1;
#X msg 662 275 2;
#X text 699 275 ratio multiplier;
#X text 649 317 check the help file for more details;
#X obj 61 492 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X listbox 61 555 25 0 0 0 - - - 0;
#X obj 63 607 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X listbox 63 670 41 0 0 0 - - - 0;
#X obj 61 521 amean 500 1000 5;
#X obj 63 636 gmean 500 1000 5;
#X listbox 261 610 37 0 0 0 - - - 0;
#X msg 261 512 ratio 0 \, 500 110 6;
#X msg 281 541 ratio 1 \, 500 1.16 6;
#X obj 261 577 list.inc;
#X text 102 428 We've seen these list generators when talking about tuning and scales. Note we can use them to generate a list of partials., f 38;
#X obj 595 521 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X listbox 595 581 29 0 0 0 - - - 0;
#X obj 595 553 list.harm 100 5 1.003;
#X msg 597 622 500;
#X listbox 597 685 41 0 0 0 - - - 0;
#X obj 597 656 rand.dev -n 5 10;
#X text 638 616 Generate 5 items deviating from 500 by up to -10 and +10 randomly, f 36;
#X text 444 422 Additionally \, we also have [list.harm] \, more specifically designed to generate a list of harmonics and subharminics with a harminic index (1 by default). On the other hand \, [rand.dev] is able to generate random deviations for partials withing a given range. Check the help file of both., f 66;
#X text 622 514 Generate 5 partials with harmonic index 1.003, f 25;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 3 0 12 0;
#X connect 5 0 14 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 12 0 2 0;
#X connect 13 0 6 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X connect 17 0 13 0;
#X connect 18 0 13 0;
#X connect 21 0 25 0;
#X connect 23 0 26 0;
#X connect 25 0 22 0;
#X connect 26 0 24 0;
#X connect 28 0 30 0;
#X connect 29 0 30 0;
#X connect 30 0 27 0;
#X connect 32 0 34 0;
#X connect 34 0 33 0;
#X connect 35 0 37 0;
#X connect 37 0 36 0;
