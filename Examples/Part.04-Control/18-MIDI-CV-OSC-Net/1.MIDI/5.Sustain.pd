#N canvas 252 75 851 500 12;
#X declare -path else;
#X text 665 210 sustain;
#X obj 642 207 tgl 20 0 empty empty empty 0 -6 0 8 #dcdcdc #000000 #000000 0 127;
#X obj 161 269 s \$0-note;
#X obj 270 267 s \$0-vel;
#X obj 571 178 nbx 3 14 -1e+37 1e+37 0 0 empty \$0-note empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 538 176 Note;
#X obj 615 178 nbx 3 14 -1e+37 1e+37 0 0 empty \$0-vel empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 656 179 Velocity;
#X obj 596 148 notein;
#X floatatom 161 243 5 0 0 0 - - - 0;
#X floatatom 270 242 5 0 0 0 - - - 0;
#X obj 589 236 suspedal;
#X obj 589 293 voices 2 1;
#X obj 589 391 out~;
#X obj 161 215 makenote 127 250;
#X obj 161 131 tgl 19 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 161 105 loadbang;
#X obj 161 159 tempo 60 100;
#X text 47 28 When pressed \, a sustain pedal doesn't let note off messages through \, and sends them only when released. The ELSE library provides the [suspedal] for this purpose., f 52;
#X text 447 85 The [suspedal] object has more functionalities than the shown vanilla implementation of a sustain pedal. For more details \, check its help file., f 53;
#X text 254 170 random picthes;
#X obj 161 186 rand.i 48 72;
#X obj 662 54 declare -path else;
#X obj 589 359 plate.rev~;
#X obj 589 326 clone voice-abs 2;
#X obj 589 263 pack;
#X text 113 298 (number boxes have the built in receive names to get the note messages), f 39;
#X text 65 370 Before checking out [suspedal] \, you check the help file of [bag] for a way on how to use it to implement a sustain pedal. The same example is actually adopted here below:, f 46;
#N canvas 293 188 474 515 vanilla-sustain 0;
#N canvas 257 63 707 555 sustain 0;
#X obj 300 49 inlet;
#X obj 182 48 inlet;
#X obj 129 48 inlet;
#X obj 262 480 outlet;
#X obj 194 480 outlet;
#X text 374 90 If the sustain toggle is on \, MIDI notes are routed to [stripnote] \, which filters note off messages \, and then sent to [bag] \, so it keeps tracks of the pressed notes and sends note off messages when the sustain toggle is off., f 33;
#X obj 159 192 stripnote;
#X obj 129 163 route 0 1;
#X obj 300 175 sel 0;
#X obj 194 222 pack;
#X msg 300 203 flush;
#X obj 273 321 f;
#X obj 194 248 t l l f;
#X msg 217 370 \$1 0;
#X obj 129 133 list prepend 0;
#X obj 300 93 tgl 23 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 240 94 Sustain;
#X obj 217 316 bag -u;
#X listbox 194 404 8 0 0 0 - - - 0;
#X msg 304 240 unique 0;
#X msg 308 275 unique 1;
#X text 372 239 stack note offs;
#X text 376 264 retrigger by sending a note off before repeating the note, f 20;
#X obj 194 432 unpack f f;
#X obj 129 97 pack f f;
#X text 312 354 The unique flag sends a note off before repeating the note. If you set it to "unique 0" \, then the note offs are stacked and all of them are sent when the sustain pedal is turned off., f 39;
#X connect 0 0 15 0;
#X connect 1 0 24 1;
#X connect 2 0 24 0;
#X connect 6 0 9 0;
#X connect 6 1 9 1;
#X connect 7 0 18 0;
#X connect 7 1 6 0;
#X connect 8 0 10 0;
#X connect 9 0 12 0;
#X connect 10 0 17 0;
#X connect 11 0 13 0;
#X connect 12 0 18 0;
#X connect 12 1 17 0;
#X connect 12 2 11 1;
#X connect 13 0 18 0;
#X connect 14 0 7 0;
#X connect 15 0 8 0;
#X connect 15 0 14 1;
#X connect 17 0 13 0;
#X connect 17 1 11 0;
#X connect 18 0 23 0;
#X connect 19 0 17 0;
#X connect 20 0 17 0;
#X connect 23 0 4 0;
#X connect 23 1 3 0;
#X connect 24 0 14 0;
#X restore 122 165 pd sustain;
#X obj 94 72 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-note empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 111 88 Note;
#X obj 155 72 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-vel empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 161 91 Velocity;
#X obj 135 30 notein;
#X text 214 131 sustain;
#X obj 189 132 tgl 20 0 empty empty empty 0 -6 0 8 #dcdcdc #000000 #000000 0 1;
#N canvas 588 58 350 354 voice1 0;
#X obj 167 230 *~;
#X obj 51 120 mtof;
#X floatatom 51 150 5 0 0 0 - - - 0;
#X obj 51 28 inlet;
#X floatatom 185 89 5 0 0 0 - - - 0;
#X floatatom 51 93 5 0 0 0 - - - 0;
#X obj 167 262 outlet~;
#X obj 51 59 unpack float float;
#X obj 185 192 adsr~ 10 40 0.5 10;
#X obj 100 148 rescale~;
#X obj 90 185 vsaw~;
#X obj 100 124 osc~ 0.125;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 10 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 1 0;
#X connect 7 0 5 0;
#X connect 7 1 4 0;
#X connect 8 0 0 1;
#X connect 9 0 10 1;
#X connect 10 0 0 0;
#X connect 11 0 9 0;
#X restore 96 333 pd voice1;
#N canvas 588 58 350 354 voice2 0;
#X obj 170 230 *~;
#X obj 51 120 mtof;
#X floatatom 51 150 5 0 0 0 - - - 0;
#X obj 51 28 inlet;
#X floatatom 185 89 5 0 0 0 - - - 0;
#X floatatom 51 93 5 0 0 0 - - - 0;
#X obj 170 262 outlet~;
#X obj 51 59 unpack float float;
#X obj 185 192 adsr~ 10 40 0.5 10;
#X obj 99 148 rescale~;
#X obj 90 185 vsaw~;
#X obj 99 124 osc~ 0.125;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 10 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 1 0;
#X connect 7 0 5 0;
#X connect 7 1 4 0;
#X connect 8 0 0 1;
#X connect 9 0 10 1;
#X connect 10 0 0 0;
#X connect 11 0 9 0;
#X restore 198 337 pd voice2;
#X obj 122 208 poly 2 1;
#X obj 122 238 pack f f f;
#X obj 122 270 route 1 2;
#X obj 96 373 output~;
#X text 204 164 <--- open;
#X connect 0 0 10 0;
#X connect 0 1 10 1;
#X connect 1 0 0 0;
#X connect 3 0 0 1;
#X connect 5 0 1 0;
#X connect 5 1 3 0;
#X connect 7 0 0 2;
#X connect 8 0 13 0;
#X connect 9 0 13 1;
#X connect 10 0 11 0;
#X connect 10 1 11 1;
#X connect 10 2 11 2;
#X connect 11 0 12 0;
#X connect 12 0 8 0;
#X connect 12 1 9 0;
#X restore 300 428 pd vanilla-sustain;
#X connect 1 0 11 2;
#X connect 4 0 11 0;
#X connect 6 0 11 1;
#X connect 8 0 4 0;
#X connect 8 1 6 0;
#X connect 9 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 25 0;
#X connect 11 1 25 1;
#X connect 12 0 24 0;
#X connect 14 0 9 0;
#X connect 14 1 10 0;
#X connect 15 0 17 0;
#X connect 16 0 15 0;
#X connect 17 0 21 0;
#X connect 21 0 14 0;
#X connect 23 0 13 0;
#X connect 23 1 13 1;
#X connect 24 0 23 0;
#X connect 25 0 12 0;
