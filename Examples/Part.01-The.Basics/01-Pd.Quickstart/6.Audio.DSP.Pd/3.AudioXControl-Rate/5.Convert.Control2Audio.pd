#N canvas 298 26 735 607 12;
#X declare -path else;
#X obj 112 519 vline~;
#X obj 102 450 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 209 454 random 100;
#X obj 209 514 sig~;
#X floatatom 209 486 0 0 0 0 - - - 0;
#X obj 209 552 print~ SIG;
#X obj 102 550 print~ VLINE;
#X obj 278 152 sig~;
#X obj 278 104 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 278 127 5 0 0 0 - - - 0;
#X obj 209 428 metro 1 1 samps;
#X text 31 221 But then we have the [vline~] object \, which offers a more accurate conversion. It is mostly a line/envelope generator as we'll see \, but it can also be used for this type of conversion., f 55;
#X text 31 284 Below \, we have [metro] sending bangs at each sample. We use this to generate random values from 0 to 99 with the native [random] object., f 55;
#X obj 94 127 setdsp~;
#X text 26 27 The native [sig~] object converts control data to audio signal. But \, as we've seen \, Pd usually has an inherent control rate that prevents more than one control value affecting an audio block \, so it can only convert one value per block., f 55;
#X text 31 332 Click on the bang and see how [vline~] is capable of generating a block of audio with one random value per sample \, but [sig~] can only convert the last received value., f 55;
#X obj 549 34 declare -path else;
#X obj 209 404 tgl 17 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X text 232 402 <= start metronome;
#X text 210 105 click =>;
#X text 35 450 click =>;
#X obj 278 180 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 561 219 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 561 242 5 0 0 0 - - - 0;
#X text 493 220 click =>;
#X obj 561 325 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X msg 561 270 \$1 500;
#X obj 561 297 line~;
#X text 458 84 As a line generator \, [vline~] can also convert floats to signals with a smoothening ramp. Also \, a simpler version of this object [line~] can do the same. You can set the ramp time as the 2nd item in a list input for both cases., f 34;
#X obj 510 476 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 510 499 5 0 0 0 - - - 0;
#X text 442 477 click =>;
#X obj 510 552 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 510 524 f2s~ 500;
#X text 470 390 The [float2sig~] object is an abstraction based on [line~] and takes a ramp time as an argument. It can be abbreviatted as [f2s~], f 33;
#X obj 563 501 nbx 5 14 0 1000 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 622 500 ramp time;
#X connect 0 0 6 0;
#X connect 1 0 5 0;
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 4 0 3 0;
#X connect 7 0 21 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 10 0 2 0;
#X connect 17 0 10 0;
#X connect 22 0 23 0;
#X connect 23 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 25 0;
#X connect 29 0 30 0;
#X connect 30 0 33 0;
#X connect 33 0 32 0;
#X connect 35 0 33 1;
