#N canvas 246 23 1033 633 12;
#X declare -path else;
#X obj 141 389 nbx 7 14 -1e+37 1e+37 0 0 empty hz empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 67 498 out~;
#X obj 144 364 hsl 128 15 100 44100 1 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 44 337 interp \$1;
#X obj 44 309 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 216 389 hz;
#X obj 844 18 declare -path else;
#X obj 178 449 spectrograph~ 1024 1 0 300 140 100;
#X obj 67 368 white~;
#X text 20 17 We can limit the frequency band of a noise source with downsampling as with the [downsample~] external previously first presented in the "decimator" example. Another possibility is to use a "sample and hold" unit \, as we'll see in the next section. This is useful for extracting or generating random values at signal rate \, since noise generators are also random number generators - specially \, [white~] or [noise~] is a plain random number generator., f 72;
#X msg 141 304 11025;
#X msg 153 332 5512.5;
#X obj 67 415 downsample~;
#X text 20 124 Nonethelees \, in this section \, we'll focus in downsampling in order to change the sound quality. In other words \, for sound generating purposes \, and not random/stochastic control. Let's start with [white~] \, which has energy equally distributed over the whole spectral range. Let's listen and see what happens when we downsample. We can hear artifacts from aliasing \, since we're reducing the sample rate \, but the energy is still present throughout the spectrum. We can see dips in the spectrograph when we use half or one fourth of the sample rate more clearly \, even more if we have the interpolation mode on. This shows us that the spectral image gets "mirrorred" and copied., f 72;
#X msg 673 197 interp \$1;
#X obj 673 170 tgl 16 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 600 417 out~;
#X obj 600 266 graph~ 1500 10;
#X obj 600 192 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 579 190 hz;
#X obj 600 231 lfnoise~ 300;
#X text 563 57 You can try other noise sources instead of [white~] \, like [pink~] \, [brown~] and [gray~]. If you want white noise \, you can use the specialized [lfnoise~] object instead \, which is similar to [white~] going through [downsample~] \, but it also has a second inlet to reset the phase with impulses., f 61;
#X obj 866 251 stepnoise~ 200;
#X obj 866 359 rampnoise~ 200;
#X obj 866 289 out~;
#X obj 866 398 out~;
#X text 765 148 ELSE also has [stepnoise~] and [rampnoise~] which are white noise being downsample without ("step") and with ("ramp") interpolation., f 32;
#X text 367 425 [spectograph~];
#X obj 771 560 out.mc~;
#X obj 771 525 stepnoise.mc~;
#X obj 771 491 sigs~ 400 800;
#X obj 894 560 out.mc~;
#X obj 894 491 sigs~ 400 800;
#X obj 894 525 rampnoise.mc~;
#X text 539 518 ELSE also has step and ramp noise bank generators with multichannel output. Check their help files., f 27;
#X connect 0 0 12 1;
#X connect 2 0 0 0;
#X connect 3 0 12 0;
#X connect 4 0 3 0;
#X connect 8 0 12 0;
#X connect 10 0 2 0;
#X connect 11 0 2 0;
#X connect 12 0 7 0;
#X connect 12 0 1 0;
#X connect 14 0 20 0;
#X connect 15 0 14 0;
#X connect 17 0 16 0;
#X connect 18 0 20 0;
#X connect 20 0 17 0;
#X connect 22 0 24 0;
#X connect 23 0 25 0;
#X connect 29 0 28 0;
#X connect 30 0 29 0;
#X connect 32 0 33 0;
#X connect 33 0 31 0;
