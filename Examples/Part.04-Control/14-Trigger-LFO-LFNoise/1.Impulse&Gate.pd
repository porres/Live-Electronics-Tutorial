#N canvas 326 53 1046 851 12;
#X declare -path else;
#X obj 257 259 pulse~ 1;
#X obj 73 660 dust~ 1;
#X obj 160 660 dust2~ 1;
#X obj 818 112 nbx 5 14 -50 50 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 818 137 randpulse~ 1;
#X obj 940 112 nbx 5 14 -50 50 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 940 137 randpulse2~ 1;
#X obj 140 260 impulse~ 1;
#X obj 412 520 impulse 1;
#X obj 336 520 pulse 1;
#X obj 412 550 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 336 550 tgl 20 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 257 292 rand.i~ 10 20;
#X obj 140 293 rand.i~ 10 20;
#X obj 429 268 setdsp~;
#X obj 841 36 declare -path else;
#X obj 862 221 randpulse2 1;
#X obj 746 221 randpulse 1;
#X floatatom 746 263 8 0 0 0 - - - 0;
#X obj 73 689 out~;
#X text 593 233 Control versions are also available:, f 19;
#X text 554 122 [randpulse~] generates random gate values and [randpulse2~] alternates between entre 0 e 1 at irregular time intervals, f 32;
#X obj 671 398 randpulse~ 0.5 0.25;
#X obj 671 463 gatehold~ 500;
#X obj 851 397 randpulse~ 0.5 0.25;
#X obj 851 462 trighold~ 500;
#X obj 671 495 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 851 494 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 671 429 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 851 428 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 818 171 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 940 171 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 257 327 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 140 328 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 862 260 tgl 20 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 63 26 A trigger in the audio domain is an impulse \, which happens when you have a silent signal (all zeroes) and then you have a single sample that is not 0 which acts like a 'bang' and fires a process like playing a sample or something. A gate \, on the other hand \, is an on/off switch \, just like a toggle. In audio \, these is also called a "pulse" which alternates in periods of on (non zero value signal) and off (zero signal). An impulse can therefore be considered the shortest pulse possible., f 64;
#X text 63 155 The ELSE library has many objects that respond to an 'impulse trigger' or gate pulses \, as given by the [impulse~] or [pulse~] objects. Below we have [impulse~] and [gate~] at a low frequency of 1 Hz \, so they can also be considered as a kind of LFO (low frequency oscillator). We'll see other kinds of LFOs next by the way., f 64;
#X floatatom 336 579 3 0 0 0 - - - 0;
#X text 96 515 The ELSE library also provides control version objects for impulse and pulse generators. The impulse generator outputs a bang., f 30;
#X text 602 308 The [gatehold~] object holds (or 'delays') a gate value for a certain amount of time (specified in ms) after the gate has closed. On the other hand \, [trighold~] holds the value of an impulse or gate. Check the help files.;
#X text 60 372 The [rand.i~] object is triggered at positive to negative or negative to positive transitions \, so it is not actually triggered by an impulse alone as you can use either an impulse or a gate to trigger it. Many objects in the ELSE library can also be triggered like that (as in other ways than an impulse). This means that ELSE also uses gates as a "trigger" and that a "trigger" in ELSE can mean both an impulse or a gate. The disambiguation is explicit when an object uses "impulse" or "pulse"., f 66;
#X text 190 708 The [dust~] and [dust2~] objects generate impulses at random intervals and with random values. Check their help files. See also [velvet~] \, which produces impulses randomly in a given period., f 43;
#X obj 409 781 velvet~;
#X obj 710 682 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 720 703 release time, f 7;
#X obj 601 675 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 601 744 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 601 704 gaterelease~ 250;
#X obj 601 639 randpulse~ 0.5;
#X obj 898 682 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 810 744 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 810 675 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 810 704 gatehold~ 500;
#X obj 810 639 randpulse~ 0.5 0.25;
#X text 909 703 hold time, f 4;
#X text 582 550 For managing gates \, [gaterelease~] releases a gate value after a given amount of time (specified in ms) after the gate has opened \, while [gatehold~] holds it a bit longer. There are control versions as well., f 53;
#X obj 775 793 gaterelease 250;
#X obj 676 794 gatehold 500;
#X connect 0 0 12 0;
#X connect 1 0 19 0;
#X connect 2 0 19 1;
#X connect 3 0 4 0;
#X connect 4 0 30 0;
#X connect 5 0 6 0;
#X connect 6 0 31 0;
#X connect 7 0 13 0;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 11 0 37 0;
#X connect 12 0 32 0;
#X connect 13 0 33 0;
#X connect 16 0 34 0;
#X connect 17 0 18 0;
#X connect 22 0 28 0;
#X connect 23 0 26 0;
#X connect 24 0 29 0;
#X connect 25 0 27 0;
#X connect 28 0 23 0;
#X connect 29 0 25 0;
#X connect 43 0 47 1;
#X connect 45 0 47 0;
#X connect 47 0 46 0;
#X connect 48 0 45 0;
#X connect 49 0 52 1;
#X connect 51 0 52 0;
#X connect 52 0 50 0;
#X connect 53 0 51 0;
