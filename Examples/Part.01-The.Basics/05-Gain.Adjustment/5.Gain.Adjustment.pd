#N canvas 400 75 782 553 12;
#X declare -path else;
#X floatatom 285 227 8 0 0 0 - - - 0;
#X obj 267 287 *~;
#X obj 285 169 nbx 5 17 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 13 #dcdcdc #000000 #000000 0 256;
#X text 260 169 dB;
#X text 47 514 original;
#X obj 285 200 db2lin;
#X obj 47 371 meter~;
#X obj 171 370 meter~;
#X obj 267 390 out~;
#X text 167 513 adjusted;
#X text 32 26 This example shows how to adjust the gain of an incoming audio \, in this case from a sample. The adjustment is made with a dB input and using [db2lin] to convert it to a ratio., f 57;
#X text 346 227 Ratio;
#X text 299 287 gain adjustment;
#X obj 285 258 f2s~ 10 1;
#X text 31 128 Compare the VU meter of the original sound with the gain adjusted one.;
#X obj 597 32 declare -path else;
#X text 31 89 This way we can add gain (or boost it) with positive dB values or decrease its intensity with negative values., f 57;
#X obj 48 222 play.file~ bubul.mp3 1 1;
#X obj 543 196 level~;
#A saved 0.0666653;
#X obj 543 164 noise~;
#X obj 543 284 meter~;
#X obj 543 437 out~;
#X text 479 82 The [level~] abstraction from ELSE performs such gain adjustment from minus infinity to +12dB., f 35;
#X text 618 215 <-- [level~];
#X text 645 239 check its help file, f 11;
#X connect 0 0 13 0;
#X connect 1 0 7 0;
#X connect 1 0 8 0;
#X connect 2 0 5 0;
#X connect 5 0 0 0;
#X connect 13 0 1 1;
#X connect 17 0 1 0;
#X connect 17 0 6 0;
#X connect 18 0 20 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
