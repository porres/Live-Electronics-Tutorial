#N canvas 532 38 561 623 12;
#X declare -path else;
#X obj 309 241 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 327 391 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 80 446 out~;
#X obj 309 307 out~;
#X obj 327 457 out~;
#X obj 379 25 declare -path else;
#X msg 105 281 size 1500;
#X msg 118 308 size 3000;
#X msg 133 371 freeze \$1;
#X obj 133 345 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 156 343 <= freeze;
#X text 33 155 Check the help file for more details. Below \, check how you can resize the delay line and also freeze it. When frozen \, the write head stops writing to the delay line but keeps moving., f 71;
#X text 450 295 same as 500 ms, f 7;
#X obj 80 246 play.file~ bubul.mp3 1 1;
#X obj 105 411 del.in~ \$0-del 3000;
#X obj 327 421 del.out~ \$0-del 1500;
#X obj 309 271 del.out~ -samps \$0-del 22050;
#X text 33 61 The [del.in~] and [del.out~] objects from ELSE are like [delwrite~] and [dlread4~] \, respectively. It uses a different interpolation method (spline) and offers more functionalitites not present in the native delay objects (at least not yet) \, like being able to resize the delay line in [del.in~] and also "freeze" the recording. We can also set the delay time in samples instead of ms., f 71;
#X text 85 538 Note that this object also has the order of execution issue. But [del.in~] has a dummy signal outlet to help this \, check the example in the help file.;
#X connect 0 0 16 0;
#X connect 1 0 15 0;
#X connect 6 0 14 0;
#X connect 7 0 14 0;
#X connect 8 0 14 0;
#X connect 9 0 8 0;
#X connect 13 0 2 0;
#X connect 13 0 14 0;
#X connect 15 0 4 0;
#X connect 16 0 3 0;
