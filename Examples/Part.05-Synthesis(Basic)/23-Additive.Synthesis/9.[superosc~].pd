#N canvas 410 66 823 709 12;
#X declare -path else;
#X obj 609 35 declare -path else;
#X obj 117 175 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 262 185 else/knob 50 0 50 2 25 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0 0 0;
#X floatatom 262 240 7 0 0 0 - - - 0;
#X obj 173 153 hsl 136 16 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 170 175 8 0 0 0 - - - 0;
#X text 260 258 detune in cents, f 8;
#X text 218 152 width;
#X msg 68 141 saw;
#X msg 108 141 square;
#X obj 109 223 superosc~ 110 0 25;
#X obj 120 258 out~;
#X obj 101 381 superosc.m~;
#A saved 0 0 -1 0 0 0 0 0 0;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X text 40 345 This is the MERDA version \, check its help file.;
#X text 17 20 [superosc~] is a wave stacking og 7 detuned sawtooth or square waves. It is based on JP-8000's supersaw oscillator. This is an abstraction based on [bl.vsaw~] and [bl.square~] \, so you can also set the width of the variable sawtooth and turn it into a triangular wave or the Pulse Width of a square wave. Check the helpfile for more., f 54;
#X obj 463 501 mix~ -gain 0.28 0.55 0.77 1 0.77 0.55 0.28 -pan -1 -0.705 -0.295 0 0.295 0.705 1, f 21;
#X obj 463 465 bl.saw~;
#X obj 462 319 mtof~;
#X floatatom 462 286 5 0 0 0 - - - 0;
#X obj 462 254 initmess 60;
#X obj 463 592 out~;
#X obj 463 423 *~;
#X obj 524 381 op * -1 -0.615 -0.205 0 0.205 0.615 1;
#X obj 524 407 cents2ratio;
#X obj 524 300 knob 50 0 50 0 0 empty empty #dfdfdf #7c7c7c #000000 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0 0 0;
#X floatatom 524 355 5 0 0 0 - - - 0;
#X obj 524 436 f2s~;
#X text 453 82 Here's a simplified version of it \, with only a sawtooth wave. The detuning in cents is multiplied by a list of 7 detuning ratios \, which is multiplied to the frequency input. The [bl.saw~] then generates 7 channels with each frequency value. The [mix~] object comes in handy to downmix this to a stereo output and it takes a fixed list of gains and panning positions for each oscillator., f 44;
#X connect 1 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 10 2;
#X connect 4 0 5 0;
#X connect 5 0 10 1;
#X connect 8 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 10 1 11 1;
#X connect 15 0 20 0;
#X connect 15 1 20 1;
#X connect 16 0 15 0;
#X connect 17 0 21 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 21 0 16 0;
#X connect 22 0 23 0;
#X connect 23 0 26 0;
#X connect 24 0 25 0;
#X connect 25 0 22 0;
#X connect 26 0 21 1;
