#N canvas 380 74 892 633 12;
#X declare -path else;
#X obj 51 375 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 51 347 loadbang;
#X obj 621 398 threshold~ 0.5 0 0.5 0, f 11;
#X obj 165 410 status~;
#X obj 51 521 timer;
#X obj 51 493 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 51 457 status;
#X obj 258 468 trig2bang~;
#X obj 343 468 trig2bang~;
#X obj 311 531 timer;
#X obj 507 386 setdsp~ 1;
#X obj 621 337 pulse~ 1;
#X obj 621 473 timer;
#X obj 51 551 nbx 3 16 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 11 #dcdcdc #000000 #000000 0 256;
#X obj 311 556 nbx 8 16 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 11 #dcdcdc #000000 #000000 0 256;
#X obj 621 504 nbx 8 16 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 11 #dcdcdc #000000 #000000 0 256;
#X obj 51 402 metro 500;
#X obj 165 348 pulse~ 1;
#X text 47 108 The [status] and [status~] objects from ELSE react when there's a 0 to non-0 transition or vice versa. Below \, to the left \, we have a toggle that turns on and off at every 500 ms. The [timer] reports the time between each bang and we see a perfect result: 500 ms., f 45;
#X text 32 550 ms;
#X text 292 557 ms;
#X text 142 497 ms;
#X text 447 41 An impulse is when we have only a single sample value and the rest of the signal is zero amplitudes. This is used as a sample accurate trigger and can be thought of the audio counterpart of a bang., f 36;
#X obj 165 468 detect~ ms;
#X text 47 207 Now \, on the right \, we have a pulse generator (with [pulse~] from ELSE) alternating between 0 e 1 at every 500 ms. The [status~] object sends an impulse at every transition and we can the measures the time interval with [detect~] object from ELSE and get the same perfect result: 500 ms., f 45;
#X text 239 345 <= frequency of 1 Hz \, period of 1000ms (500ms for on "1" and off "0"), f 23;
#X obj 75 23 declare -path else;
#X obj 165 496 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 621 365 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 165 378 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 83 493 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 343 503 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 311 503 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 621 441 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 695 441 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 51 429 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 753 68 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 753 40 loadbang;
#X obj 753 95 metro 500;
#X obj 753 123 bang2imp~;
#X text 730 181 ms;
#X obj 753 149 detect~ ms;
#X obj 753 180 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X text 447 136 The [bang2imp~] object from ELSE is based on [vline~] so it can generate impulses with sample accuracy., f 36;
#X text 48 64 And here we have yet another example about Pd's inherent control rate restriction., f 45;
#X text 448 225 The issue comes when we use an object like [trig2bang~] (from ELSE) \, which does an opposite conversion and generates a bang when it receives an impulse. There's a time precision loss because the bang is always in sync with audio block transitions! So note how [timer] does not measure a perfect 500 ms then., f 55;
#X text 435 536 The same unperfect result is given by Pd's native [threshold~] \, which reports bangs when the signal exceeds a threshold value \, and another when it falls back below., f 63;
#X connect 0 0 16 0;
#X connect 1 0 0 0;
#X connect 2 0 33 0;
#X connect 2 1 34 0;
#X connect 3 0 7 0;
#X connect 3 0 23 0;
#X connect 3 1 8 0;
#X connect 3 1 23 0;
#X connect 4 0 13 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 6 1 30 0;
#X connect 7 0 32 0;
#X connect 8 0 31 0;
#X connect 9 0 14 0;
#X connect 11 0 28 0;
#X connect 12 0 15 0;
#X connect 16 0 35 0;
#X connect 17 0 29 0;
#X connect 23 0 27 0;
#X connect 28 0 2 0;
#X connect 29 0 3 0;
#X connect 30 0 4 1;
#X connect 31 0 9 1;
#X connect 32 0 9 0;
#X connect 33 0 12 0;
#X connect 34 0 12 1;
#X connect 35 0 6 0;
#X connect 36 0 38 0;
#X connect 37 0 36 0;
#X connect 38 0 39 0;
#X connect 39 0 41 0;
#X connect 41 0 42 0;
