#N canvas 252 70 1067 684 12;
#X declare -path else;
#X obj 41 260 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 94 233 *~;
#X obj 40 171 osc~ 440;
#X obj 94 273 out~;
#X obj 516 287 vsl 18 100 0 1 0 0 ewtwet wefwert empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X text 539 380 0;
#X text 539 281 1;
#X obj 575 267 *~;
#X obj 575 310 out~;
#X obj 593 221 decay2~ 100 2000;
#X msg 681 183 0.5;
#X text 30 98 Here we have an attack stage of 50 ms and a release stage of 450 ms - the total duration of the envelope is 500 ms.;
#X obj 112 182 envgen~ 50 1 450 0;
#X text 61 351 0;
#X text 61 252 1;
#X obj 516 259 s2f~;
#X obj 41 226 s2f~;
#X obj 830 13 declare -path else;
#X obj 754 285 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 809 254 *~;
#X obj 755 192 osc~ 440;
#X obj 809 294 out~;
#X text 774 376 0;
#X text 774 277 1;
#X obj 754 251 s2f~;
#X text 859 144 exponential;
#X obj 514 201 osc~ 440;
#X obj 284 263 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 337 236 *~;
#X obj 283 174 osc~ 440;
#X obj 337 276 out~;
#X text 304 354 0;
#X text 304 255 1;
#X obj 284 229 s2f~;
#X obj 355 185 vline~;
#X msg 355 158 1 50 \, 0 450 50;
#X text 30 18 An "AR" envelope has an "attack" and a "release" stage. The attack is the first stage that starts at 0 and goes to the peak amplitude. Right after the attack is finished we have the release stage going back to 0 - let's see this first implemented with [envgen~] and [vline~] \, both linearly .;
#X obj 827 203 envgen~ 50 1 450 0;
#X obj 593 183 float2imp~;
#X obj 50 541 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 105 510 *~;
#X obj 51 448 osc~ 440;
#X obj 105 550 out~;
#X text 70 632 0;
#X text 70 533 1;
#X obj 50 507 s2f~;
#X obj 123 459 adsr~ 50 450 0 0;
#X obj 232 494 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 950 238 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 936 266 status;
#X text 275 546 Note that the [envgen~] object also has a status output and how the [adsr~] object can also be triggered by bangs., f 39;
#X obj 597 529 vsl 16 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 652 498 *~;
#X obj 598 436 osc~ 440;
#X obj 652 538 out~;
#X obj 670 409 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 617 620 0;
#X text 617 521 1;
#X obj 597 495 s2f~;
#X obj 744 482 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 670 447 asr~ 50 450;
#X text 275 442 You can also use [adsr~] with just the attack and decay stages to implement an attack+release envelope. The [asr~] object \, with just attack and release phases can also implement the same kind of envelope., f 39;
#X text 801 415 The [decay~] and [decay2~] objects are cloned from SuperCollider. Note that in [decay2~] you do not have an attack phase of \, say \, 100 ms (as in the example above) and then a decay phase of 2000 ms (so a total of 2100 ms). The actual duration of the whole envelope is 2000 ms. For a proper attack and decay envelope that you can set exactly the time amount of the attack and decay phases you can use [asr~] and [adsr~] as to the left., f 34;
#X obj 123 421 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 593 151 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 827 143 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 112 150 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 843 176 initmess curve 1;
#X text 498 50 The [decay2~] object from ELSE is another exponential envelope and a variant of [decay~] that has an attack stage \, which is the first argument - but the total duration still depends on the decay time. Below we also have [envgen~] with the same exponential setting used in [asr~] and [adsr~]., f 68;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 7 0 8 0;
#X connect 9 0 7 1;
#X connect 9 0 15 0;
#X connect 10 0 9 0;
#X connect 12 0 1 1;
#X connect 12 0 16 0;
#X connect 15 0 4 0;
#X connect 16 0 0 0;
#X connect 19 0 21 0;
#X connect 20 0 19 0;
#X connect 24 0 18 0;
#X connect 26 0 7 0;
#X connect 28 0 30 0;
#X connect 29 0 28 0;
#X connect 33 0 27 0;
#X connect 34 0 28 1;
#X connect 34 0 33 0;
#X connect 35 0 34 0;
#X connect 37 0 19 1;
#X connect 37 0 24 0;
#X connect 37 1 48 0;
#X connect 38 0 9 0;
#X connect 40 0 42 0;
#X connect 41 0 40 0;
#X connect 45 0 39 0;
#X connect 46 0 40 1;
#X connect 46 0 45 0;
#X connect 46 1 47 0;
#X connect 52 0 54 0;
#X connect 53 0 52 0;
#X connect 55 0 60 0;
#X connect 58 0 51 0;
#X connect 60 0 52 1;
#X connect 60 0 58 0;
#X connect 60 1 59 0;
#X connect 63 0 46 0;
#X connect 64 0 38 0;
#X connect 65 0 37 0;
#X connect 66 0 12 0;
#X connect 67 0 37 0;
