#N canvas 287 118 1042 521 12;
#X declare -path else;
#X obj 787 50 declare -path else;
#X obj 77 254 tabwrite~ signal;
#N canvas 0 22 450 278 (subpatch) 0;
#X array signal 441 float 1;
#A 0 0.086098 0.148344 0.210008 0.270847 0.330622 0.389097 0.446044 0.501239 0.554464 0.605512 0.65418 0.700278 0.743625 0.784051 0.821396 0.855514 0.886273 0.913547 0.937234 0.957238 0.973482 0.985901 0.994447 0.999087 0.9998 0.996587 0.989457 0.978441 0.96358 0.944934 0.922576 0.896593 0.867088 0.834176 0.797987 0.758663 0.716359 0.67124 0.623484 0.573279 0.520821 0.466317 0.409981 0.352035 0.292706 0.232226 0.170835 0.108771 0.0462813 -0.0163908 -0.0789984 -0.141296 -0.203038 -0.263983 -0.32389 -0.382525 -0.439657 -0.495062 -0.548522 -0.599827 -0.648776 -0.695175 -0.738844 -0.779609 -0.817313 -0.851804 -0.88295 -0.910627 -0.934726 -0.955154 -0.971827 -0.984684 -0.993672 -0.998756 -0.999917 -0.997149 -0.990464 -0.979887 -0.965461 -0.947241 -0.925301 -0.899725 -0.870614 -0.838084 -0.80226 -0.763286 -0.721311 -0.676503 -0.629038 -0.579101 -0.526889 -0.472607 -0.416469 -0.358694 -0.29951 -0.239149 -0.177849 -0.11585 -0.0533963 0.00926748 0.0718948 0.13424 0.196057 0.257105 0.317142 0.375933 0.433248 0.48886 0.542552 0.594111 0.643338 0.690036 0.734024 0.775128 0.813187 0.848051 0.879583 0.90766 0.932171 0.953019 0.970124 0.983417 0.992848 0.998376 0.999983 0.997661 0.99142 0.981284 0.967292 0.949502 0.927979 0.902812 0.874097 0.841949 0.806493 0.767868 0.726227 0.681732 0.63456 0.584894 0.532931 0.478873 0.422935 0.365335 0.306299 0.246061 0.184855 0.122923 0.0605086 -0.00214371 -0.0647876 -0.127177 -0.189067 -0.250214 -0.310378 -0.369322 -0.426816 -0.482633 -0.536553 -0.588367 -0.637867 -0.684863 -0.729167 -0.770608 -0.80902 -0.844254 -0.876172 -0.904647 -0.929569 -0.950837 -0.968371 -0.9821 -0.991971 -0.997945 -0.999998 -0.998123 -0.992326 -0.982631 -0.969075 -0.951712 -0.93061 -0.905852 -0.877536 -0.845771 -0.810684 -0.772412 -0.731106 -0.686927 -0.640049 -0.590658 -0.538945 -0.485115 -0.429379 -0.371957 -0.313073 -0.252959 -0.191851 -0.12999 -0.0676179 -0.00498016 0.0576771 0.120108 0.182067 0.24331 0.303598 0.362693 0.420363 0.476381 0.530528 0.582591 0.632365 0.679654 0.724275 0.766048 0.804813 0.840415 0.872716 0.901588 0.926918 0.948608 0.966569 0.980734 0.991045 0.997463 0.999963 0.998533 0.993182 0.983927 0.970809 0.953874 0.933194 0.908847 0.880929 0.849551 0.814834 0.776918 0.735947 0.692087 0.645507 0.596391 0.544932 0.491332 0.435802 0.37856 0.319831 0.259845 0.198838 0.13705 0.0747237 0.0121038 -0.0505637 -0.113033 -0.175057 -0.236394 -0.296803 -0.356045 -0.413888 -0.470105 -0.524477 -0.576786 -0.62683 -0.674412 -0.719343 -0.76145 -0.800564 -0.836534 -0.869215 -0.898484 -0.924221 -0.946329 -0.964718 -0.979317 -0.99007 -0.996931 -0.999877 -0.998894 -0.993987 -0.985175 -0.972492 -0.95599 -0.93573 -0.911796 -0.884278 -0.853287 -0.818943 -0.781382 -0.740752 -0.697211 -0.650932 -0.602094 -0.550891 -0.497524 -0.442203 -0.385144 -0.326572 -0.266717 -0.205814 -0.144103 -0.0818257 -0.0192268 0.0434477 0.105951 0.168039 0.229466 0.289992 0.349379 0.407393 0.463806 0.518397 0.570952 0.621264 0.669135 0.714377 0.756812 0.796275 0.832608 0.865672 0.895333 0.921479 0.944002 0.962818 0.977851 0.989042 0.996348 0.999739 0.999204 0.994741 0.986372 0.974127 0.958055 0.938219 0.914697 0.887583 0.85698 0.823011 0.785808 0.745519 0.7023 0.656322 0.607767 0.556822 0.503692 0.448581 0.391709 0.333297 0.273576 0.212781 0.151149 0.0889236 0.0263488 -0.0363295 -0.098865 -0.161012 -0.222527 -0.283167 -0.342695 -0.400876 -0.457483 -0.512292 -0.565089 -0.615666 -0.663824 -0.709374 -0.752136 -0.791945 -0.828642 -0.862083 -0.892138 -0.918687 -0.941628 -0.960869 -0.976336 -0.987965 -0.995715 -0.999552 -0.999462 -0.995446 -0.987518 -0.975713 -0.960072 -0.940661 -0.917553 -0.890841 -0.86063 -0.827036 -0.790195 -0.750247 -0.707354 -0.661681 -0.613408 -0.562726 -0.509833 -0.454937 -0.398253 -0.340005 -0.280421 -0.219736 -0.158187 -0.0960169 -0.0334695 0.0292094 0.0917736 0.153977 0.215576 0.276328 0.335994 0.39434 0.451137 0.506162 0.559197 0.610037 0.658479 0.704334 0.747423 0.787575 0.824634 0.858451 0.888897 0.91585 0.939206 0.958871 0.974769 0.986839 0.99503 0.999314 0.99967 0.9961 0.988616 0.977248 0.962041 0.943054 0.920363 0.894055 0.864235 0.83102 0.79454 0.754939 0.712371 0.667006 0.619019 0.568601;
#X coords 0 1 440 -1 250 157 1 0 0;
#X restore 74 325 graph;
#X obj 278 173 setdsp~;
#X obj 157 208 bng 21 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 77 179 osc~ 440;
#X obj 157 175 metro 100;
#X obj 157 144 tgl 21 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 61 26 This example shows how to plot audio signals in Pd. As already mentioned \, we can use arrays to write audio signals into them \, we can do this with [tabwrite~] \, just send it bangs so it can write the incoming signal into an array \,, f 35;
#X obj 397 179 osc~ 440;
#X obj 397 254 graph~;
#X text 393 48 In this tutorial \, the [graph~] abstraction from ELSE is used a lot \, and it's a simple abstraction based on this structe \, with an array and [tabwrite~]., f 25;
#X obj 699 244 scope~ 254 163 8 3 63 -1 1 0 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X obj 699 191 osc~ 440;
#X text 685 115 ELSE also offers [scope~] \, which is a proper oscilloscope and a compiled GUI object., f 37;
#X text 554 451 Check the help file of both objects above;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 9 0 10 0;
#X connect 13 0 12 0;
