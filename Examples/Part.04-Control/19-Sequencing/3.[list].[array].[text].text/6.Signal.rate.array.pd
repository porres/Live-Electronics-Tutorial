#N canvas 370 60 836 550 12;
#X declare -path else;
#X obj 88 57 tgl 25 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 146 31 TEMPO;
#X obj 138 57 nbx 5 18 60 100 0 0 empty empty empty 0 -8 0 15 #dcdcdc #000000 #000000 0 256;
#X obj 88 402 *~;
#X obj 88 438 out~;
#X text 532 450 arrays:;
#X obj 580 35 declare -path else;
#X obj 36 101 sel 0;
#X obj 88 341 bl.saw~ -midi, f 7;
#X obj 594 438 array define tgl_\$0 16;
#X obj 594 462 array define seq_\$0 16;
#X obj 88 185 -~ 1;
#X obj 88 101 tempo~ -mul 4 60, f 22;
#X obj 221 291 *~;
#X obj 165 235 tabread~ tgl_\$0, f 8;
#X obj 88 234 tabread~ seq_\$0, f 8;
#X obj 88 310 +~ 60;
#X text 82 22 Play Stop, f 4;
#X obj 88 142 pulsecount~ 16;
#X obj 239 213 changed~;
#X obj 88 281 sh~;
#X text 339 140 We need [sh~] to not let the picthes go through if there's no toggle on. The changed object sends impulses when index change and we multiply it to the output of the toggle array just so we can convert the output to impulses. Hence \, if the output is '1' when the index changes \, we have an impulse output., f 59;
#N canvas 429 47 878 708 drum 0;
#X obj 61 58 tgl 15 1 \$0-tgl0 NIENTE empty 0 -6 0 10 #649cc4 #000000 #000000 1 1;
#X obj 87 58 tgl 15 1 \$0-tgl1 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 112 58 tgl 15 1 \$0-tgl2 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 135 58 tgl 15 1 \$0-tgl3 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 186 58 tgl 15 1 \$0-tgl5 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 211 58 tgl 15 1 \$0-tgl6 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 236 58 tgl 15 0 \$0-tgl7 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 287 58 tgl 15 1 \$0-tgl9 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 312 58 tgl 15 1 \$0-tgl10 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 335 58 tgl 15 1 \$0-tgl11 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 384 58 tgl 15 1 \$0-tgl13 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 409 58 tgl 15 1 \$0-tgl14 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 435 58 tgl 15 1 \$0-tgl15 NIENTE empty 0 -6 0 10 #c4fcfc #000000 #000000 1 1;
#X obj 261 58 tgl 15 1 \$0-tgl8 NIENTE empty 0 -6 0 10 #649cc4 #000000 #000000 1 1;
#X obj 161 58 tgl 15 1 \$0-tgl4 NIENTE empty 0 -6 0 10 #649cc4 #000000 #000000 1 1;
#X obj 359 58 tgl 15 1 \$0-tgl12 NIENTE empty 0 -6 0 10 #649cc4 #000000 #000000 1 1;
#X obj 61 80 vsl 15 128 -12 12 0 0 \$0-sl_0 sl1 empty 0 -9 0 10 #788cc8 #000000 #000000 0 1;
#X obj 87 80 vsl 15 128 -12 12 0 0 \$0-sl_1 sl2 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 113 80 vsl 15 128 -12 12 0 0 \$0-sl_2 sl3 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 135 80 vsl 15 128 -12 12 0 0 \$0-sl_3 sl4 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 161 80 vsl 15 128 -12 12 0 0 \$0-sl_4 sl5 empty 0 -9 0 10 #788cc8 #000000 #000000 0 1;
#X obj 187 80 vsl 15 128 -12 12 0 0 \$0-sl_5 sl6 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 211 80 vsl 15 128 -12 12 0 0 \$0-sl_6 sl7 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 236 80 vsl 15 128 -12 12 0 0 \$0-sl_7 sl8 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 261 80 vsl 15 128 -12 12 0 0 \$0-sl_8 sl9 empty 0 -9 0 10 #788cc8 #000000 #000000 0 1;
#X obj 287 80 vsl 15 128 -12 12 0 0 \$0-sl_9 sl10 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 312 80 vsl 15 128 -12 12 0 0 \$0-sl_10 sl11 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 335 80 vsl 15 128 -12 12 0 0 \$0-sl_11 sl12 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 359 80 vsl 15 128 -12 12 0 0 \$0-sl_12 sl13 empty 0 -9 0 10 #788cc8 #000000 #000000 0 1;
#X obj 384 80 vsl 15 128 -12 12 0 0 \$0-sl_13 sl14 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 409 80 vsl 15 128 -12 12 0 0 \$0-sl_14 sl15 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 435 80 vsl 15 128 -12 12 0 0 \$0-sl_15 sl16 empty 0 -9 0 10 #c4fcfc #000000 #000000 0 1;
#X obj 527 395 r \$0-tgl0;
#X msg 527 417 0 \$1;
#X obj 527 439 s tgl_\$0;
#X obj 601 439 s tgl_\$0;
#X obj 674 440 s tgl_\$0;
#X obj 748 440 s tgl_\$0;
#X obj 525 509 s tgl_\$0;
#X obj 599 509 s tgl_\$0;
#X obj 672 510 s tgl_\$0;
#X obj 746 510 s tgl_\$0;
#X obj 673 588 s tgl_\$0;
#X obj 751 588 s tgl_\$0;
#X obj 524 657 s tgl_\$0;
#X obj 602 657 s tgl_\$0;
#X obj 680 658 s tgl_\$0;
#X obj 758 658 s tgl_\$0;
#X obj 601 395 r \$0-tgl1;
#X msg 601 417 1 \$1;
#X obj 674 395 r \$0-tgl2;
#X msg 674 418 2 \$1;
#X msg 748 418 3 \$1;
#X obj 525 465 r \$0-tgl4;
#X msg 525 487 4 \$1;
#X obj 599 465 r \$0-tgl5;
#X msg 599 487 5 \$1;
#X obj 672 466 r \$0-tgl6;
#X msg 672 488 6 \$1;
#X obj 746 466 r \$0-tgl7;
#X msg 746 489 7 \$1;
#X obj 526 543 r \$0-tgl8;
#X obj 600 542 r \$0-tgl9;
#X obj 673 544 r \$0-tgl10;
#X msg 673 566 10 \$1;
#X obj 751 544 r \$0-tgl11;
#X msg 751 566 11 \$1;
#X obj 524 613 r \$0-tgl12;
#X obj 602 613 r \$0-tgl13;
#X obj 680 613 r \$0-tgl14;
#X obj 758 614 r \$0-tgl15;
#X msg 524 635 12 \$1;
#X msg 602 635 13 \$1;
#X msg 680 636 14 \$1;
#X msg 758 636 15 \$1;
#X obj 748 396 r \$0-tgl3;
#X obj 526 587 s tgl_\$0;
#X msg 526 565 8 \$1;
#X obj 600 587 s tgl_\$0;
#X msg 600 565 9 \$1;
#X msg 75 438 \; sl1 \$1 \; sl2 \$2 \; sl3 \$3 \; sl4 \$4 \; sl5 \$5 \; sl6 \$6 \; sl7 \$7 \; sl8 \$8 \; sl9 \$9 \; sl10 \$10 \; sl11 \$11 \; sl12 \$12 \; sl13 \$13 \; sl14 \$14 \; sl15 \$15 \; sl16 \$16 \;;
#X obj 75 408 receive seq;
#X msg 197 416 0 \$1;
#X msg 271 416 1 \$1;
#X msg 344 417 2 \$1;
#X msg 418 417 3 \$1;
#X msg 195 486 4 \$1;
#X msg 269 486 5 \$1;
#X msg 342 487 6 \$1;
#X msg 416 488 7 \$1;
#X msg 343 565 10 \$1;
#X msg 421 565 11 \$1;
#X msg 194 634 12 \$1;
#X msg 272 634 13 \$1;
#X msg 350 635 14 \$1;
#X msg 428 635 15 \$1;
#X msg 196 564 8 \$1;
#X msg 270 564 9 \$1;
#X obj 197 394 r \$0-sl_0;
#X obj 197 438 s seq_\$0;
#X obj 271 438 s seq_\$0;
#X obj 344 439 s seq_\$0;
#X obj 418 439 s seq_\$0;
#X obj 195 508 s seq_\$0;
#X obj 269 508 s seq_\$0;
#X obj 342 509 s seq_\$0;
#X obj 416 509 s seq_\$0;
#X obj 196 586 s seq_\$0;
#X obj 270 586 s seq_\$0;
#X obj 343 587 s seq_\$0;
#X obj 421 587 s seq_\$0;
#X obj 194 656 s seq_\$0;
#X obj 272 656 s seq_\$0;
#X obj 350 657 s seq_\$0;
#X obj 428 657 s seq_\$0;
#X obj 271 394 r \$0-sl_1;
#X obj 344 394 r \$0-sl_2;
#X obj 418 395 r \$0-sl_3;
#X obj 195 464 r \$0-sl_4;
#X obj 269 464 r \$0-sl_5;
#X obj 342 465 r \$0-sl_6;
#X obj 416 465 r \$0-sl_7;
#X obj 196 542 r \$0-sl_8;
#X obj 270 541 r \$0-sl_9;
#X obj 343 543 r \$0-sl_10;
#X obj 421 543 r \$0-sl_11;
#X obj 194 612 r \$0-sl_12;
#X obj 272 612 r \$0-sl_13;
#X obj 350 612 r \$0-sl_14;
#X obj 428 613 r \$0-sl_15;
#X obj 62 281 initmess \; transp 60 \; seq -6 -8 -8 -3 -8 1 4 4 -3 -5 -5 -1 2 6 7 7;
#X text 56 356 Get velues from sequence and send to sliders., f 17;
#X text 205 343 get values from sliders and send to the array, f 24;
#X text 571 349 get values from toggles and send to the array, f 23;
#X text 62 259 initialize sequencer;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 48 0 49 0;
#X connect 49 0 35 0;
#X connect 50 0 51 0;
#X connect 51 0 36 0;
#X connect 52 0 37 0;
#X connect 53 0 54 0;
#X connect 54 0 38 0;
#X connect 55 0 56 0;
#X connect 56 0 39 0;
#X connect 57 0 58 0;
#X connect 58 0 40 0;
#X connect 59 0 60 0;
#X connect 60 0 41 0;
#X connect 61 0 77 0;
#X connect 62 0 79 0;
#X connect 63 0 64 0;
#X connect 64 0 42 0;
#X connect 65 0 66 0;
#X connect 66 0 43 0;
#X connect 67 0 71 0;
#X connect 68 0 72 0;
#X connect 69 0 73 0;
#X connect 70 0 74 0;
#X connect 71 0 44 0;
#X connect 72 0 45 0;
#X connect 73 0 46 0;
#X connect 74 0 47 0;
#X connect 75 0 52 0;
#X connect 77 0 76 0;
#X connect 79 0 78 0;
#X connect 81 0 80 0;
#X connect 82 0 99 0;
#X connect 83 0 100 0;
#X connect 84 0 101 0;
#X connect 85 0 102 0;
#X connect 86 0 103 0;
#X connect 87 0 104 0;
#X connect 88 0 105 0;
#X connect 89 0 106 0;
#X connect 90 0 109 0;
#X connect 91 0 110 0;
#X connect 92 0 111 0;
#X connect 93 0 112 0;
#X connect 94 0 113 0;
#X connect 95 0 114 0;
#X connect 96 0 107 0;
#X connect 97 0 108 0;
#X connect 98 0 82 0;
#X connect 115 0 83 0;
#X connect 116 0 84 0;
#X connect 117 0 85 0;
#X connect 118 0 86 0;
#X connect 119 0 87 0;
#X connect 120 0 88 0;
#X connect 121 0 89 0;
#X connect 122 0 96 0;
#X connect 123 0 97 0;
#X connect 124 0 90 0;
#X connect 125 0 91 0;
#X connect 126 0 92 0;
#X connect 127 0 93 0;
#X connect 128 0 94 0;
#X connect 129 0 95 0;
#X coords 0 -1 1 1 410 169 2 50 50;
#X restore 346 258 pd drum;
#X text 339 76 This is the signal version of the last example. So we have [tempo~] sending impulses and the counting happens with the [pulsecount~] object. We then subtract 1 and use it as the 0-based index to read from the arrays with [tabread~].;
#X obj 221 329 asr~ 50 500, f 6;
#X connect 0 0 7 0;
#X connect 0 0 12 0;
#X connect 2 0 12 1;
#X connect 3 0 4 0;
#X connect 7 0 18 0;
#X connect 8 0 3 0;
#X connect 11 0 14 0;
#X connect 11 0 15 0;
#X connect 12 0 18 0;
#X connect 13 0 24 0;
#X connect 14 0 13 0;
#X connect 14 0 20 1;
#X connect 15 0 20 0;
#X connect 16 0 8 0;
#X connect 18 0 11 0;
#X connect 18 0 19 0;
#X connect 19 0 13 1;
#X connect 20 0 16 0;
#X connect 24 0 3 1;
