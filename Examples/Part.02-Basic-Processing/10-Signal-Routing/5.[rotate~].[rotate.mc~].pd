#N canvas 335 23 817 450 12;
#X declare -path else;
#X obj 564 270 hsl 128 15 -1 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X msg 561 239 0;
#X msg 594 239 0.5;
#X msg 522 239 -0.5;
#X obj 224 162 pan2~;
#X obj 84 162 pan2~;
#X obj 224 103 noise~;
#X obj 224 212 meter2~;
#X obj 51 212 meter2~;
#X obj 292 84 hsl 128 15 -1 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 289 136 *~ -1;
#X text 30 13 The rotation process is based on panning. When you have two pan objects with the inverted panning parameter \, you can rotate the channels. See the patch below., f 69;
#X obj 138 212 meter2~;
#X obj 442 295 rotate~;
#X obj 465 267 noise~;
#X obj 84 103 osc~ 440;
#X obj 442 236 osc~ 440;
#X obj 289 108 f2s~ 100;
#X obj 561 293 f2s~ 100;
#X obj 554 47 declare -path else;
#X obj 109 379 out~;
#X obj 424 338 out~;
#X text 611 338 And for multichannel support \, check, f 20;
#X obj 647 382 rotate.mc~;
#X text 390 135 The [rotate~] object from the ELSE library performs this kind of rotation \, but not only in a two channel (stereo) setting. You can give it as many more as you want. Check its help file., f 52;
#X connect 0 0 18 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 7 0;
#X connect 4 0 12 0;
#X connect 4 1 7 1;
#X connect 4 1 12 1;
#X connect 5 0 8 0;
#X connect 5 0 12 0;
#X connect 5 1 8 1;
#X connect 5 1 12 1;
#X connect 6 0 4 0;
#X connect 9 0 17 0;
#X connect 10 0 4 1;
#X connect 12 0 20 0;
#X connect 12 1 20 1;
#X connect 13 0 21 0;
#X connect 13 1 21 1;
#X connect 14 0 13 1;
#X connect 15 0 5 0;
#X connect 16 0 13 0;
#X connect 17 0 5 1;
#X connect 17 0 10 0;
#X connect 18 0 13 2;
