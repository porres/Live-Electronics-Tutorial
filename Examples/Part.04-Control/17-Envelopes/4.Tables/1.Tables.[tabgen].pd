#N canvas 250 23 1085 678 12;
#X declare -path else;
#X obj 310 212 bng 30 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 292 291 *~;
#X obj 233 214 osc~ 440;
#X text 19 636 0;
#X text 21 439 1;
#X obj 35 447 cnv 15 298 198 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 22050 float 0;
#X coords 0 1 22049 0 300 200 1 0 0;
#X restore 34 446 graph;
#X text 151 250 ms;
#X obj 75 252 nbx 5 16 -1e+37 1e+37 0 0 empty \$0-ms empty 0 -8 0 13
#dcdcdc #000000 #000000 0 256;
#X text 343 636 0;
#X text 345 439 1;
#X obj 359 447 cnv 15 298 198 empty empty empty 20 12 0 14 #dcdcdc
#404040 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-sine 22050 float 0;
#X coords 0 1 22049 0 300 200 1 0 0;
#X restore 358 446 graph;
#X text 58 22 In this section we generate functions in tables and use
them as envelopes. The first is called "hann" \, which is nothing but
an inverted cosine adjusted to the range from 0 to 1 (this is also
one of the functions used in the [fader~] object)., f 80;
#X obj 292 325 out~;
#X obj 310 259 tabplay~ \$0-hann;
#X obj 518 212 bng 30 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 500 291 *~;
#X obj 441 214 osc~ 440;
#X obj 500 325 out~;
#X obj 518 259 tabplay~ \$0-sine;
#X text 58 135 The native [tabplay~] object is used to load the table
and trigger the envelope. Click on the bangs below., f 80;
#X text 73 229 duration;
#X obj 71 334 declare -path else;
#X text 58 85 The next is here called "sine" \, but it's actually just
the first half the sine function (this is also used in [fader~]). Open
the [pd tables] subpatch so see how to create these functions., f
80;
#N canvas 455 273 787 473 tables 0;
#X obj 195 27 inlet;
#X obj 95 360 osc~;
#X msg 120 333 0.5;
#X obj 169 421 tabwrite~ \$0-hann;
#X obj 314 299 send \$0-sine;
#X msg 304 268 resize \$1;
#X obj 95 386 rescale~;
#X obj 95 303 trigger f b;
#X obj 195 206 expr 1000 / $f1 \; $f1 * sr_khz;
#X floatatom 304 245 0 0 0 0 - - - 0;
#X obj 195 275 trigger f b;
#X msg 233 307 0;
#X obj 269 380 tabwrite~ \$0-sine;
#X floatatom 195 247 5 0 0 0 - - - 0;
#X obj 195 308 / 2;
#X obj 217 338 sine~;
#X obj 304 325 send \$0-hann;
#X text 447 124 The table size is given in ms and we calculate the
number of samples (that depends on the sample rate) to resize the table
\, then we also get the frequency of this period in samples and feed
it into oscillators that we use to generate the waveform and record
it into tables with the native [tabwrite~] object. Note we use half
the frequency for the sine function because we just need the first
half of its cycle., f 36;
#X obj 256 179 v sr_khz;
#X obj 224 148 t b f;
#X obj 224 96 samplerate~;
#X obj 224 68 r pd-dsp-started;
#X obj 224 120 / 1000;
#X obj 195 181 f 500;
#X obj 73 112 initmess \; pd dsp 1 \; \$0-ms set 500;
#X connect 0 0 23 0;
#X connect 1 0 6 0;
#X connect 2 0 1 1;
#X connect 5 0 4 0;
#X connect 5 0 16 0;
#X connect 6 0 3 0;
#X connect 7 0 1 0;
#X connect 7 1 2 0;
#X connect 7 1 3 0;
#X connect 8 0 13 0;
#X connect 8 1 9 0;
#X connect 9 0 5 0;
#X connect 10 0 14 0;
#X connect 10 1 11 0;
#X connect 10 1 12 0;
#X connect 11 0 15 1;
#X connect 13 0 10 0;
#X connect 13 0 7 0;
#X connect 14 0 15 0;
#X connect 15 0 12 0;
#X connect 19 0 23 0;
#X connect 19 1 18 0;
#X connect 20 0 22 0;
#X connect 21 0 20 0;
#X connect 22 0 19 0;
#X connect 23 0 8 0;
#X restore 75 283 pd tables;
#X obj 906 176 bng 30 250 50 0 empty empty empty 17 7 0 10 #dcdcdc
#000000 #000000;
#X obj 888 255 *~;
#X obj 829 178 osc~ 440;
#X text 681 584 0;
#X text 683 387 1;
#X obj 697 395 cnv 15 298 198 empty empty empty 20 12 0 14 #dcdcdc
#404040 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-table 22050 float 0;
#X coords 0 1 22049 0 300 200 1 0 0;
#X restore 696 394 graph;
#X obj 888 289 out~;
#X obj 906 223 tabplay~ \$0-table;
#X msg 735 287 hanning;
#X obj 711 318 tabgen -ms \$0-table;
#X msg 711 216 size \$1;
#X obj 711 183 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
#dfdfdf #000000 #000000 0 256;
#X obj 735 258 loadbang;
#X text 681 33 The [tabgen] object can generate several table functions
that can be used as envelopes. Check its help file. Below we have basically
the same example but with the table generated by [tabgen]. Note it
can also apply envelopes to existing values in arrays., f 46;
#X connect 0 0 15 0;
#X connect 1 0 14 0;
#X connect 2 0 1 0;
#X connect 8 0 25 0;
#X connect 15 0 1 1;
#X connect 16 0 20 0;
#X connect 17 0 19 0;
#X connect 18 0 17 0;
#X connect 20 0 17 1;
#X connect 26 0 34 0;
#X connect 27 0 33 0;
#X connect 28 0 27 0;
#X connect 34 0 27 1;
#X connect 35 0 36 0;
#X connect 37 0 36 0;
#X connect 38 0 37 0;
#X connect 39 0 35 0;
