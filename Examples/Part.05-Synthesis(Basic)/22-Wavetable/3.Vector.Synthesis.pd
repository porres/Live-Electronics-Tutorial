#N struct 1111-point float x0 float y0 float xs float ys float fg float in float gridx float gridy;
#N canvas 260 35 904 674 12;
#X declare -path else;
#X obj 512 58 slider2d 127 127 -1 1 1 -1 1 240 240 240 0 0 0 1 0 0 0 0 empty empty;
#X listbox 512 203 20 0 0 0 - - - 0;
#X floatatom 512 335 7 0 0 0 - - - 0;
#X obj 540 546 xfade~ -lin;
#X obj 577 481 xfade~ -lin;
#X obj 395 461 xfade~ -lin;
#X obj 698 490 f2s~ 20;
#X obj 512 410 f2s~ 20;
#X obj 512 279 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X floatatom 698 335 7 0 0 0 - - - 0;
#X text 495 56 1;
#X text 641 58 2;
#X text 495 169 3;
#X text 641 167 4;
#X text 572 297 X axis;
#X text 759 294 Y axis;
#X obj 698 279 knob 50 -1 1 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X obj 512 238 unpack float float;
#X obj 512 23 initmess 0 0;
#X obj 540 583 out~;
#X text 27 140 This example shows crossfading between four independent wavetable oscillators \, but assume that you can try other oscillators and arbitrary sound sources. The crossfading is performed in two dimensions. Hence \, horizontally (x axis) \, you can crossfade between sources 1-2 or 3-4 \, while the vertical crossfading (y axis) lets you crosfade between these two groups., f 62;
#X obj 196 559 xfade~ -lin;
#X obj 233 514 xfade~ -lin;
#X obj 59 494 xfade~ -lin;
#X obj 196 596 out~;
#X text 315 541 y axis;
#X text 141 432 x axis;
#X obj 722 232 s \$0-hz;
#X obj 614 331 r \$0-hz;
#X obj 432 341 r \$0-hz;
#X obj 233 369 r \$0-hz;
#X obj 59 347 r \$0-hz;
#X obj 722 206 nbx 5 17 -1e+37 1e+37 0 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 256;
#X obj 722 179 initmess 220;
#X obj 59 373 wt~ \$0-t1;
#X obj 96 406 wt~ \$0-t2;
#X obj 233 395 wt~ \$0-t3;
#X obj 270 435 wt~ \$0-t4;
#X obj 395 371 wt~ \$0-t1;
#X obj 432 404 wt~ \$0-t2;
#X obj 577 362 wt~ \$0-t3;
#X obj 614 402 wt~ \$0-t4;
#N canvas 441 205 707 312 generate 0;
#X obj 70 84 tabgen 512 \$0-t1 sin 1;
#X obj 72 225 tabgen 512 \$0-t4 sin 1 0 1 2 0 0.5 3 0 0.333333 4 0 0.25 5 0 0.2 6 0 0.166667 7 0 0.142857 8 0 0.125, f 50;
#X obj 70 118 tabgen 512 \$0-t2 sin 1 0 1 3 0 -0.111111 5 0 0.04 7 0 -0.0204082 9 0 0.0123457 11 0 -0.00826446 13 0 0.00591716 15 0 -0.00444444, f 64;
#X text 238 83 sine wave;
#X text 534 123 triangular wave;
#X text 504 179 square wave;
#X text 442 235 saw wave;
#X obj 70 179 tabgen 512 \$0-t3 sin 1 0 1 3 0 0.333333 5 0 0.2 7 0 0.142857;
#X restore 712 600 pd generate tables;
#X obj 725 21 declare -path else;
#X obj 722 64 array define \$0-t1;
#X obj 722 87 array define \$0-t2;
#X obj 722 111 array define \$0-t3;
#X obj 722 134 array define \$0-t4;
#X text 698 551 Open below to see what are the waveforms., f 22;
#X obj 133 456 rampnoise~ 5;
#X obj 303 563 rampnoise~ 5;
#X text 27 246 Below we have [rampnoise~] objects controlling randomly the crossfading. To the right we have a 2D slider to control the fading position with a controller. Note that the tables are numbered according to the numbered sound sources in the 2D slider ('\$0-t1' \, '\$0-t2' and so on)., f 62;
#X text 793 208 <---- set frequency, f 9;
#X text 27 21 Vector synthesis is basically dynamic linear crossfading between (usually) four sound sources. It is not necessarily a type of wavetable synthesis \, but this technique was introduced by Sequential Circuits in the Prophet VS synthesizer during 1986 and it used four digital wavetable oscillators as its four sound sources then. Therefore here it is included in this tutorial. It is also a nice preparation for the next example., f 62;
#X connect 0 0 1 0;
#X connect 1 0 17 0;
#X connect 2 0 7 0;
#X connect 3 0 19 0;
#X connect 4 0 3 1;
#X connect 5 0 3 0;
#X connect 6 0 3 2;
#X connect 7 0 5 2;
#X connect 7 0 4 2;
#X connect 8 0 2 0;
#X connect 9 0 6 0;
#X connect 16 0 9 0;
#X connect 17 0 8 0;
#X connect 17 1 16 0;
#X connect 18 0 0 0;
#X connect 21 0 24 0;
#X connect 22 0 21 1;
#X connect 23 0 21 0;
#X connect 28 0 40 0;
#X connect 28 0 41 0;
#X connect 29 0 38 0;
#X connect 29 0 39 0;
#X connect 30 0 36 0;
#X connect 30 0 37 0;
#X connect 31 0 34 0;
#X connect 31 0 35 0;
#X connect 32 0 27 0;
#X connect 33 0 32 0;
#X connect 34 0 23 0;
#X connect 35 0 23 1;
#X connect 36 0 22 0;
#X connect 37 0 22 1;
#X connect 38 0 5 0;
#X connect 39 0 5 1;
#X connect 40 0 4 0;
#X connect 41 0 4 1;
#X connect 49 0 23 2;
#X connect 49 0 22 2;
#X connect 50 0 21 2;
