#N canvas 517 79 538 642 12;
#X obj 265 393 hz2rad;
#X obj 265 423 clip 0 1;
#X floatatom 265 450 11 0 0 0 - - - 0;
#X obj 107 553 out~;
#X text 118 150 y[n] = y[-1] + f * (x[n] - y[-1]);
#X text 38 203 Where 'f' is input frequency in radians per sample., f 61;
#X obj 265 477 v f;
#X obj 107 519 fexpr~ $y + f * ($x - $y);
#X text 38 25 As seen in the formula from the last example \, for delta values smaller than the slew limits \, we have a one pole filter with the 'f' cutoff parameter. This slew limit is the maximum change in amplitude \, which for the audio output is a peak to peak amplitude of "2" \, so this value is good enough for any reasonable audio input., f 61;
#X text 38 119 In this example \, the simplified formula is:, f 61;
#X text 31 236 You can compare this below with the original [slop~] object and the [fexpr~] version., f 62;
#X obj 268 330 hsl 162 19 50 5000 1 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 265 358 6 0 0 0 - - - 0;
#X obj 107 374 noise~;
#X obj 132 421 slop~ 0 2 0 2 0;
#X obj 132 450 out~;
#X obj 265 278 loadbang;
#X msg 265 304 150;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 6 0;
#X connect 7 0 3 0;
#X connect 11 0 12 0;
#X connect 12 0 0 0;
#X connect 12 0 14 1;
#X connect 13 0 14 0;
#X connect 13 0 7 0;
#X connect 14 0 15 0;
#X connect 16 0 17 0;
#X connect 17 0 11 0;
