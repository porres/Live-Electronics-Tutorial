#N canvas 523 49 819 497 12;
#X declare -path else;
#X obj 250 297 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 309 295 decay time (ms);
#X obj 310 324 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 372 323 filter cutoff (hz);
#X obj 131 399 out~;
#X obj 643 28 declare -path else;
#X text 41 21 The ELSE library has the [pluck~] object \, which implements a Karplus Strong Algorithm. By default \, it uses an internal white noise generator as an excitation signal and can be triggered by impulses. A frequency value determines the delay period and the excitation signal gets automatically enveloped to that size. The feedback value is given as a decay time in ms (t60). Internally \, it has a 1st order lowpass filter in the feedback loop (just like [lop2~]). By default \, the cutoff frequency results in the original Karplus Strong algorithm \, since it corresponds to a two sample mean average filter. See its help file for more details., f 64;
#X obj 33 203 keyboard 17 80 4 2 0 0 empty empty;
#X obj 131 351 pluck~ -midi 0 4000 10000, f 26;
#X listbox 33 304 8 0 0 0 - - - 0;
#X text 96 290 a list input can trigger the object at control rate, f 18;
#X obj 575 106 else/pluck.m~;
#A saved 1659.59 10318.3 0 0 0;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 33 357 s midi;
#X obj 575 73 r midi;
#X obj 575 408 out~;
#X text 292 399 The [pluck.m~] is the MERDA version of [pluck~]., f 27;
#X connect 0 0 8 2;
#X connect 2 0 8 3;
#X connect 7 0 9 0;
#X connect 8 0 4 0;
#X connect 9 0 8 0;
#X connect 9 0 12 0;
#X connect 11 0 14 0;
#X connect 13 0 11 0;
