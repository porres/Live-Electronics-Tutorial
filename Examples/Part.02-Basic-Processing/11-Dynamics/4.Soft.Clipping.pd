#N canvas 361 62 830 590 12;
#X declare -path else;
#X obj 239 185 nbx 5 14 0 40 0 0 empty ganho empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X floatatom 239 231 7 0 0 0 - - - 0;
#X obj 239 207 db2lin;
#X obj 486 365 hsl 128 15 0.1 1000 0 1 empty empty drive 45 9 1 12 #dcdcdc #000000 #000000 0 1;
#X obj 444 430 drive~;
#X obj 443 322 osc~ 440;
#X obj 95 284 expr~ tanh($v1 * $v2);
#X obj 94 393 graph~ 185 25;
#X obj 444 466 out~;
#X obj 118 317 out~;
#X obj 95 224 osc~ 440;
#X text 42 27 It'd be ideal to address this in the waveshaping section \, but let's anticipate it briefly for now \, and further discuss it later on., f 49;
#X text 42 82 The "tanh" function performs a "soft clipping" and non linear distortion. It always distorts the signal a bit \, and can act as a compressor \, but also end up quite close to a hard clipping. It all depends on the input signal boost., f 49;
#X text 294 230 Ratio;
#X text 300 185 Gain (dB);
#X obj 239 255 f2s~ 10 1;
#X obj 586 38 declare -path else;
#X obj 483 392 numbox~ 5 12 100 #c0c0c4 #440008 50 0 0 1;
#X obj 629 111 tanh~;
#X text 434 83 The [tanh~] object from ELSE is more efficient than [expr~] and has multichannel support., f 24;
#X obj 643 332 drive.m~;
#A saved -1 0;
#A saved;
#A saved;
#X text 653 302 [drive.m~];
#X text 433 155 Nonetheless \, the [drive~] object \, from ELSE \, perofrms the same kind of soft clipping with the tanh function by default. It also has two other modes though \, check its help file for more details. The drive factor is the same as the 'Gain' dB factor on the patch to the right. The [drive.m~] module is the MERDA version and the knob controls the gain from 0.1 to 1000 (like the slider below to the left)., f 45;
#X connect 0 0 2 0;
#X connect 1 0 15 0;
#X connect 2 0 1 0;
#X connect 3 0 17 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 6 0 9 0;
#X connect 10 0 6 0;
#X connect 15 0 6 1;
#X connect 17 0 4 1;
