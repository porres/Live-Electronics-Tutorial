#N canvas 479 54 769 646 12;
#X declare -path else;
#N canvas 305 82 952 596 cubic_interpolators 0;
#X text 45 422 This type addresses the first derivative problem by deliberately making it continuous at breakpoints. It finds a cubic polynomial curve that passes through b and c but it does not usually pass through a and d. Instead \, it uses the pairs (a \, c) and (b \, d) to set the curve slope at points b and c \, respectively., f 52;
#X text 45 507 There's a general hermite interpolator that you can set the tension and bias parameters. But first let's talk about two special cases: spline and cubic., f 52;
#X text 460 231 The "tension" setting adjusts the curve slope at breakpoints. At point b \, the slope is (1 - tension)*((c - a)/2). At tension = -1 \, the slope at breakpoints is double that of 'spline' and represents the "Cubic" interpolation., f 67;
#X text 463 460 Bias is related to tension in that it changes slope at breakpoints and depth of curve \, but it does so by giving one of the two points surrounding the breakpoint more control over the slope at that breakpoint than the other. Bias values between 0 and 1 give the left point more influence than the right \, bias values between 0 and -1 do the opposite. The normal range for both tension and bias values is -1 to +1. Outside of that range the curves can be unpredictable., f 67;
#X obj 46 152 note 97 14 Menlo empty 5 0 0 0 1 223 223 223 1 1 Lagrange:;
#X text 41 179 To interpolate between points b and c \, the Lagrange interpolator finds a cubic polynomial curve that passes through "a \, b \, c \, and d" that we've seen before. This is the the kind of interpolation used in Pd Vanilla's objects (like [tabread4~]) and also in cubic interpolating functions in Csound., f 54;
#X obj 464 14 note 0 14 Menlo empty 1 0 0 0 1 255 255 255 0 0 Spline:;
#X text 530 14 (Catmull-Rom Spline) interpolator (tension 0 \, bias 0):;
#X obj 462 207 note 0 14 Menlo empty 1 0 0 0 1 255 255 255 0 0 Cubic:;
#X text 516 206 (tension -1 \, bias 0):;
#X obj 464 307 note 0 14 Menlo empty 1 0 0 0 1 255 255 255 0 0 Other settings:;
#X text 41 28 Both lagrange and hermite draw polynomial curves between the interpolating points and use one point to the left and another to the right of the interpolating points (hence 4 points are used). Let us label these 4 points as: a \, b \, c \, and d \, where the interpolation is between points b and c. Check more technical details below., f 54;
#X text 41 274 Its advantage is that the resulting curve has low RMS error with respect to that of an ideal interpolator (sinc). A disadvantage is that the first derivative (the instantaneous slope of the curve) is not usually continuous at breakpoints \, which can cause sharp corners in the curve (check examples inparent patch)., f 54;
#X obj 46 398 note 97 14 Menlo empty 5 0 0 0 1 223 223 223 1 1 Hermite:;
#X text 13 373 =============================================================, f 61;
#X text 463 328 You can set other tension values as well as a bias parameter with the general 'hermite' interpolator. The period-8 cosine example in the parent patch is a good illustration of how tension works. Other slope values can be used to accentuate or attenuate the shape of the curve. When tension is 1 \, the slope is 0 (horizontal) at all breakpoints. Between 0 and 1 \, the slope at breakpoints is less than that for the 'spline' case \, and the maxima and curve is shallower. Tension values between 0 and -1 increase the slope at breakpoints and make the curve deeper., f 67;
#X text 461 38 This most basic form sets the curve slope at point b as the slope of the line passing through a and c \, which is defined (c - a)/2. The curve slope at point c is set to (d - b)/2. In the provided examples \, it is easy to see that there are no sharp corners. However \, the second derivative is discontinuous \, so there are occasional abrupt changes in concavity \, e.g. at zero-crossings in the 4-period cosine example. There are no such abrupt changes in concavity with Lagrange interpolation. This type of interpolation is used in SuperCollider's interpolating functions and in [tabreader] \, [tabreader~] and other objects in the ELSE library by default., f 67;
#X restore 554 124 pd cubic_interpolators;
#X text 42 16 Most of the interpolation formulas in [tabreader]/[tabreader~] can be found in: <http://paulbourke.net/miscellaneous/interpolation>., f 75;
#X obj 453 374 cnv 15 288 108 empty empty empty 20 12 0 14 #dfdfdf #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-source 12 float 2;
#X coords 0 1.1 12 -1.1 290 110 2 0 0;
#X restore 452 373 graph;
#X obj 561 513 bng 35 250 50 0 \$0-read-write \$0-dummy empty 1 -20 0 14 #dfdfdf #000000 #000000;
#X obj 676 234 bng 35 250 50 0 \$0-clear \$0-dummy empty -2 -20 0 14 #dfdfdf #000000 #000000;
#X obj 677 521 nbx 3 20 0 256 0 0 \$0-periods-snd \$0-periods-rcv empty 0 -8 0 16 #dfdfdf #000000 #000000 0 256;
#X obj 670 300 nbx 3 18 4 48 0 0 \$0-draw-samps-snd \$0-draw-samps-rcv empty -10 -8 0 15 #dfdfdf #000000 #000000 0 256;
#X text 667 279 Samples;
#X obj 36 345 hsl 170 19 0 1 0 0 empty empty empty -2 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 119 601 nbx 7 19 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 15 #dcdcdc #000000 #000000 0 256;
#X obj 200 460 bng 20 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X floatatom 286 426 5 -1 1 0 - - - 16;
#X text 299 370 Usual range for both: -1 to +1, f 15;
#X text 284 405 Tension;
#X text 382 405 Bias;
#X obj 119 536 else/display;
#X msg 85 409 lin;
#X msg 127 438 lagrange;
#X msg 136 465 spline;
#X msg 147 491 cubic;
#X floatatom 372 426 5 -1 1 0 - - - 16;
#X obj 200 495 pack2 hermite float float;
#X obj 499 521 note 56 14 Menlo empty 0 0 0 0 0 255 255 255 0 0 Redraw:;
#X obj 668 211 note 0 14 Menlo empty 0 0 0 0 0 255 255 255 0 0 Clear:;
#X text 612 522 Periods:;
#X floatatom 33 376 11 0 0 0 - - - 0;
#X text 448 574 open to see interpolation functions ---->, f 15;
#X text 42 228 Besides the cubic interpolators we also have the other options. You can also compare the output values directly in the object below, f 35;
#N canvas 67 68 1067 661 Interpolation-Functions 0;
#X obj 11 29 cnv 15 512 192 empty empty empty 20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-Linear 513 float 0;
#X coords 0 1 512 -1 513 192 1 0 0;
#X restore 10 29 graph;
#X obj 535 29 cnv 15 512 192 empty empty empty 20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-Cosine 513 float 0;
#X coords 0 1 512 -1 513 192 1 0 0;
#X restore 534 29 graph;
#X obj 11 241 cnv 15 512 192 empty empty empty 20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-Lagrange 513 float 0;
#X coords 0 1 512 -1 513 192 1 0 0;
#X restore 10 241 graph;
#X obj 535 241 cnv 15 512 192 empty empty empty 20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-Cubic 513 float 0;
#X coords 0 1 512 -1 513 192 1 0 0;
#X restore 534 241 graph;
#X obj 11 453 cnv 15 512 192 empty empty empty 20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-Spline 513 float 0;
#X coords 0 1 512 -1 513 192 1 0 0;
#X restore 10 453 graph;
#X obj 535 453 cnv 15 512 192 empty empty empty 20 12 0 14 #dcdcdc #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-Hermite 513 float 0;
#X coords 0 1 512 -1 513 192 1 0 0;
#X restore 534 452 graph;
#N canvas 727 399 200 133 generate_interpolation 0;
#N canvas 822 125 431 407 phasor 0;
#X obj 57 257 phasor~;
#X msg 228 177 0;
#X obj 57 95 samplerate~;
#X obj 228 44 r \$0-read-write;
#X obj 57 286 s~ \$0-phasor;
#X obj 57 331 outlet~;
#X obj 57 141 / 512;
#X obj 79 170 r \$0-periods-snd;
#X obj 159 263 s \$0-read-write;
#X obj 57 222 * 1;
#X obj 79 194 t b f;
#X connect 0 0 4 0;
#X connect 1 0 0 1;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 3 0 1 0;
#X connect 6 0 9 0;
#X connect 7 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 8 0;
#X connect 10 1 9 1;
#X restore 33 40 pd phasor;
#N canvas 257 75 945 450 wave-tabwrite 0;
#X obj 42 33 inlet~;
#X obj 59 150 r \$0-read-write;
#X obj 42 89 r~ \$0-phasor;
#X obj 314 147 r \$0-read-write;
#X obj 297 86 r~ \$0-phasor;
#X obj 59 310 r \$0-read-write;
#X obj 42 249 r~ \$0-phasor;
#X obj 343 309 r \$0-read-write;
#X obj 326 248 r~ \$0-phasor;
#X obj 571 361 r \$0-read-write;
#X obj 554 203 r~ \$0-phasor;
#X obj 597 118 r \$0-read-write;
#X obj 580 57 r~ \$0-phasor;
#X obj 583 240 pack2 hermite f f;
#X obj 326 335 tabwrite~ \$0-Spline;
#X obj 580 144 tabwrite~ \$0-Lagrange;
#X obj 42 176 tabwrite~ \$0-Linear;
#X obj 554 392 tabwrite~ \$0-Hermite;
#X obj 42 336 tabwrite~ \$0-Cubic;
#X obj 803 226 r \$0-read-write;
#X msg 803 250 \; pd dsp 1;
#X obj 297 173 tabwrite~ \$0-Cosine;
#X obj 664 197 r \$0-t;
#X obj 718 198 r \$0-b;
#X obj 595 298 s \$0-read-write;
#X obj 595 273 b;
#X obj 554 326 tabreader~ -loop -hermite 0 0 \$0-source;
#X obj 297 112 tabreader~ -loop -cos \$0-source;
#X obj 326 274 tabreader~ -loop \$0-source;
#X obj 580 83 tabreader~ -loop -lagrange \$0-source;
#X obj 42 115 tabreader~ -loop -lin \$0-source;
#X obj 42 275 tabreader~ -loop -cubic \$0-source;
#X connect 1 0 16 0;
#X connect 2 0 30 0;
#X connect 3 0 21 0;
#X connect 4 0 27 0;
#X connect 5 0 18 0;
#X connect 6 0 31 0;
#X connect 7 0 14 0;
#X connect 8 0 28 0;
#X connect 9 0 17 0;
#X connect 10 0 26 0;
#X connect 11 0 15 0;
#X connect 12 0 29 0;
#X connect 13 0 25 0;
#X connect 13 0 26 0;
#X connect 19 0 20 0;
#X connect 22 0 13 1;
#X connect 23 0 13 2;
#X connect 25 0 24 0;
#X connect 26 0 17 0;
#X connect 27 0 21 0;
#X connect 28 0 14 0;
#X connect 29 0 15 0;
#X connect 30 0 16 0;
#X connect 31 0 18 0;
#X restore 33 71 pd wave-tabwrite;
#X connect 0 0 1 0;
#X restore 868 10 pd generate_interpolation;
#X restore 564 601 pd Interpolation-Functions;
#N canvas 297 84 525 359 (subpatch) 0;
#N canvas 139 120 450 278 (subpatch) 0;
#X obj 10 40 bng 35 250 50 0 \$0-noise \$0-dummy Noise -2 -20 0 14 #dfdfdf #000000 #000000;
#X obj 11 116 nbx 2 17 4 48 0 0 \$0-noise-samps-snd \$0-noise-samps-rcv empty -10 -8 0 15 #dfdfdf #000000 #000000 0 256;
#X text 3 95 Samples;
#X coords 0 1 100 -1 60 161 1 0 0;
#X restore 101 101 graph;
#N canvas 160 143 450 278 (subpatch) 0;
#X obj 18 36 bng 35 250 50 0 \$0-impulse \$0-impulse-set Impulse -10 -20 0 14 #dfdfdf #000000 #000000;
#X text 13 79 L;
#X text 30 79 M;
#X text 47 79 R;
#X obj 12 99 vsl 15 45 -1 1 0 0 \$0-left-impulse-snd \$0-left-impulse-rcv empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 28 99 vsl 15 45 -1 1 0 0 \$0-mid-impulse-snd \$0-mid-impulse-rcv empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 44 99 vsl 15 45 -1 1 0 0 \$0-right-impulse-snd \$0-right-impulse-rcv empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X coords 0 1 100 -1 80 161 1 0 0;
#X restore 161 101 graph;
#N canvas 264 182 450 278 (subpatch) 0;
#X obj 23 38 bng 35 250 50 0 \$0-cosine \$0-dummy Cosine -6 -20 0 14 #dfdfdf #000000 #000000;
#X obj 5 108 hradio 19 1 1 4 \$0-cos-period-snd \$0-cos-period-rcv Points 12 -10 0 12 #dfdfdf #000000 #000000 0;
#X text 9 128 2;
#X text 28 128 3;
#X text 46 128 4;
#X text 65 128 8;
#X coords 0 1 100 -1 88 161 1 0 0;
#X restore 308 101 graph;
#N canvas 139 120 450 278 (subpatch) 0;
#X obj 12 36 bng 35 250 50 0 \$0-step \$0-dummy Step 2 -20 0 14 #dfdfdf #000000 #000000;
#X obj 7 101 vradio 19 1 1 2 \$0-step-dir-snd \$0-step-dir-rcv empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X text 29 102 Up;
#X text 29 121 Down;
#X coords 0 1 100 -1 67 161 1 0 0;
#X restore 241 101 graph;
#N canvas 672 173 476 303 generate-array 0;
#N canvas 294 76 488 599 clear 0;
#X obj 174 38 loadbang;
#X msg 44 86 const 0;
#X obj 284 38 r \$0-clear;
#X obj 164 361 s \$0-source;
#X obj 174 331 s \$0-left-impulse-rcv;
#X msg 174 86 0;
#X obj 194 301 s \$0-mid-impulse-rcv;
#X obj 204 271 s \$0-right-impulse-rcv;
#X obj 214 241 s \$0-step-dir-rcv;
#X obj 224 211 s \$0-cos-period-rcv;
#X obj 234 181 s \$0-periods-rcv;
#X obj 284 151 s \$0-noise-samps-rcv;
#X msg 284 87 8;
#X obj 294 121 s \$0-draw-samps-rcv;
#X obj 44 541 s \$0-Lagrange;
#X obj 64 511 s \$0-Hermite;
#X obj 84 481 s \$0-Spline;
#X obj 104 451 s \$0-Cubic;
#X obj 124 421 s \$0-Cosine;
#X obj 144 391 s \$0-Linear;
#X msg 234 87 set 1;
#X connect 0 0 1 0;
#X connect 0 0 5 0;
#X connect 0 0 20 0;
#X connect 0 0 12 0;
#X connect 1 0 3 0;
#X connect 1 0 14 0;
#X connect 1 0 15 0;
#X connect 1 0 16 0;
#X connect 1 0 17 0;
#X connect 1 0 18 0;
#X connect 1 0 19 0;
#X connect 2 0 1 0;
#X connect 2 0 12 0;
#X connect 2 0 5 0;
#X connect 5 0 4 0;
#X connect 5 0 7 0;
#X connect 5 0 6 0;
#X connect 5 0 8 0;
#X connect 5 0 9 0;
#X connect 12 0 11 0;
#X connect 12 0 13 0;
#X connect 20 0 10 0;
#X restore 89 182 pd clear;
#N canvas 291 103 319 411 impulse 0;
#X obj 81 177 r \$0-left-impulse-snd;
#X obj 108 198 r \$0-mid-impulse-snd;
#X obj 135 221 r \$0-right-impulse-snd;
#X obj 31 38 r \$0-impulse;
#X obj 54 302 s \$0-source;
#X obj 31 339 s \$0-read-write;
#X msg 54 275 0 \$2 0 0 0 0 0 \$3 0 0 0 0 \$4;
#X obj 31 70 t b b b;
#X msg 77 102 resize 12;
#X obj 77 133 s \$0-source;
#X obj 54 246 pack f f f f;
#X connect 0 0 10 1;
#X connect 1 0 10 2;
#X connect 2 0 10 3;
#X connect 3 0 7 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 7 1 10 0;
#X connect 7 2 8 0;
#X connect 8 0 9 0;
#X connect 10 0 6 0;
#X restore 88 54 pd impulse;
#N canvas 322 149 524 433 step 0;
#X obj 28 49 r \$0-step;
#X obj 271 235 sel 0 1;
#X obj 271 210 f;
#X obj 28 360 s \$0-read-write;
#X obj 48 321 s \$0-source;
#X obj 289 181 r \$0-step-dir-snd;
#X msg 60 268 0 -1 -1 -1 -1 0 0 0 0 1 1 1 1;
#X msg 294 268 0 1 1 1 1 0 0 0 0 -1 -1 -1 -1;
#X msg 48 209 normalize 0.75;
#X obj 28 81 t b b b b;
#X msg 286 116 resize 12;
#X obj 286 147 s \$0-source;
#X connect 0 0 9 0;
#X connect 1 0 6 0;
#X connect 1 1 7 0;
#X connect 2 0 1 0;
#X connect 5 0 2 1;
#X connect 6 0 4 0;
#X connect 7 0 4 0;
#X connect 8 0 4 0;
#X connect 9 0 3 0;
#X connect 9 1 8 0;
#X connect 9 2 2 0;
#X connect 9 3 10 0;
#X connect 10 0 11 0;
#X restore 88 84 pd step;
#N canvas 170 180 1163 394 cosine 0;
#X obj 218 110 f;
#X obj 28 340 s \$0-read-write;
#X obj 47 309 s \$0-source;
#X obj 28 81 t b b b;
#X obj 28 49 r \$0-cosine;
#X obj 233 81 r \$0-cos-period-snd;
#X obj 218 135 sel 0 1 2 3;
#X obj 73 195 t b b;
#X msg 47 117 normalize 0.95;
#X msg 148 227 resize 4;
#X msg 59 226 0 1 -1 1 -1;
#X obj 233 195 t b b;
#X msg 388 226 resize 6;
#X msg 219 226 0 1 -0.5 -0.5 1 -0.5 -0.5;
#X obj 473 195 t b b;
#X msg 459 226 0 1 0 -1 0 1 0 -1 0;
#X msg 628 226 resize 4;
#X obj 703 75 t b b;
#X msg 1068 106 resize 7;
#X msg 689 106 0 1 0.62349 -0.222521 -0.900969 -0.900969 -0.222521 0.62349;
#X obj 703 225 t b b;
#X msg 1068 256 resize 8;
#X msg 689 256 0 1 0.707107 0 -0.707107 -1 -0.707107 0 0.707107;
#X connect 0 0 6 0;
#X connect 3 0 1 0;
#X connect 3 1 8 0;
#X connect 3 2 0 0;
#X connect 4 0 3 0;
#X connect 5 0 0 1;
#X connect 6 0 7 0;
#X connect 6 1 11 0;
#X connect 6 2 14 0;
#X connect 6 3 17 0;
#X connect 6 3 20 0;
#X connect 7 0 10 0;
#X connect 7 1 9 0;
#X connect 8 0 2 0;
#X connect 9 0 2 0;
#X connect 10 0 2 0;
#X connect 11 0 13 0;
#X connect 11 1 12 0;
#X connect 12 0 2 0;
#X connect 13 0 2 0;
#X connect 14 0 15 0;
#X connect 14 1 16 0;
#X connect 15 0 2 0;
#X connect 16 0 2 0;
#X connect 17 0 19 0;
#X connect 17 1 18 0;
#X connect 20 0 22 0;
#X connect 20 1 21 0;
#X connect 21 0 2 0;
#X connect 22 0 2 0;
#X restore 88 114 pd cosine;
#N canvas 926 45 353 517 noise 0;
#X obj 28 420 s \$0-read-write;
#X obj 103 229 s \$0-source;
#X msg 103 198 resize \$1;
#X obj 47 151 f;
#X obj 47 176 t f f;
#X obj 47 229 until;
#X obj 47 382 tabwrite \$0-source;
#X msg 206 121 0;
#X obj 152 302 f;
#X obj 201 302 + 1;
#X obj 28 81 t b b b;
#X obj 47 260 t b b;
#X obj 47 302 random 32768;
#X obj 47 332 / 16389;
#X obj 47 354 - 1;
#X obj 28 49 r \$0-noise;
#X obj 62 121 r \$0-noise-samps-snd;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 2 0;
#X connect 5 0 11 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 8 0 6 1;
#X connect 9 0 8 1;
#X connect 10 0 0 0;
#X connect 10 1 3 0;
#X connect 10 2 7 0;
#X connect 11 0 12 0;
#X connect 11 1 8 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 14 0 6 0;
#X connect 15 0 10 0;
#X connect 16 0 3 1;
#X restore 88 144 pd noise;
#X msg 246 60 resize \$1;
#X obj 246 97 s \$0-source;
#X obj 246 31 r \$0-draw-samps-snd;
#X msg 249 214 1;
#X obj 249 242 s \$0-left-impulse-rcv;
#X obj 249 148 loadbang;
#X obj 262 181 s \$0-impulse-set;
#X connect 5 0 6 0;
#X connect 7 0 5 0;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 10 0 11 0;
#X restore 236 50 pd generate-array;
#X coords 0 1 100 -1 297 163 1 100 100;
#X restore 333 165 graph;
#X obj 606 23 declare -path else;
#X text 637 165 <-- generate;
#X obj 33 315 bng 22 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X text 673 181 array;
#X text 42 150 Generate arrays to the right and see the result in '\$0-source' and the interpolation functions in the subpatch below. Or draw points yourself and click "redraw"., f 35;
#X text 250 517 spline: tension: 0 \, bias: 0;
#X text 250 535 cubic: tension: -1 \, bias: 0;
#X msg 118 409 cos;
#X obj 297 463 s \$0-t;
#X obj 383 463 s \$0-b;
#X text 41 58 The lagrange interpolator is a cubic interpolator. Another cubic interpolator is provided in [tabreader]/[tabreader~] \, the 'hermite' interpolator \, where two special cases are provided \, called 'cubic' and 'spline' (the default method) \, but a general case with setable parameters (bias and tension) is also given. More details about cubic interpolators is found in this subpatch:, f 99;
#X obj 119 572 tabreader -loop -lin \$0-source;
#X connect 9 0 26 0;
#X connect 11 0 22 0;
#X connect 12 0 22 1;
#X connect 12 0 39 0;
#X connect 16 0 42 0;
#X connect 17 0 16 0;
#X connect 18 0 16 0;
#X connect 19 0 16 0;
#X connect 20 0 16 0;
#X connect 21 0 22 2;
#X connect 21 0 40 0;
#X connect 22 0 16 0;
#X connect 26 0 42 0;
#X connect 33 0 9 0;
#X connect 38 0 16 0;
#X connect 42 0 10 0;
