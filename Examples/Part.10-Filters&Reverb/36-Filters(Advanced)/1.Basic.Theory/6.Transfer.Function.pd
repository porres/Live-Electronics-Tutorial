#N canvas 384 73 905 446 12;
#X obj 152 251 cnv 15 200 25 empty empty empty 5 12 0 14 -233017 -66577
0;
#X obj 550 94 cnv 15 200 25 empty empty empty 5 12 0 14 -261234 -66577
0;
#X text 576 98 X(z) => [ H(z) ] => Y(z);
#X obj 588 189 cnv 15 144 40 empty empty empty 5 12 0 14 -261234 -66577
0;
#X text 591 193 X(z) x H(z) = Y(z) \; H(z) = Y(z) / X(z);
#X text 30 191 First let's check the diagram below in the time domain
\, where h(n) represents the filter action as a function of a sample:
, f 55;
#X text 169 254 x(n) => [ h(n) ] => y(n);
#X text 468 42 In the transfer function notation we have a function
of complex frequency and capital letters:, f 52;
#X text 472 137 And since a convolution in the time domain is the same
as a multiplication in the frequency domain \, we have:, f 54;
#N canvas 312 69 531 489 FIR 0;
#X obj 78 93 cnv 15 350 25 empty empty empty 5 12 0 14 -233017 -66577
0;
#X obj 67 218 cnv 15 390 30 empty empty empty 5 12 0 14 -233017 -66577
0;
#X obj 78 414 cnv 15 355 50 empty empty empty 5 12 0 14 -261234 -66577
0;
#X text 85 429 H(z) =;
#X text 143 418 Y(z);
#X text 144 441 X(z);
#X text 135 423 _______;
#X text 191 430 =;
#X obj 84 142 fexpr~ ($x[0] + $x[-1] + $x[-2] + $x[-3]) * 0.25;
#X obj 104 296 cnv 15 335 30 empty empty empty 5 12 0 14 -233017 -66577
0;
#X text 97 96 y[n] = (x[n] + x[n-1] + x[n-2] + x[n-3]) / 4;
#X text 72 224 Y(z) = (X(z) + X(z)z^-1 + X(z)z^-2 + X(z)z^-3) * 0.25
;
#X text 39 180 On to the transfer function \, we start from:;
#X text 112 303 Y(z) = X(z) * 0.25 * (1 + z^-1 + z^-2 + z^-3);
#X text 203 431 0.25 * (1 + z^-1 + z^-2 + z^-3);
#X text 44 270 Then put X(z) as a common factor:;
#X text 50 359 Now if we move X(z) to the other size of the equation
\, we have Y(z) / X(z) \, that is H(z) \, our transfer function!;
#X text 36 22 Heres the Transfer Function of a FIR filter \, an average
filter of 4 samples. Let's start with the difference equation and [fexpr~]
implementation.;
#X restore 590 395 pd FIR;
#N canvas 846 61 581 537 IIR 0;
#X obj 99 83 cnv 15 180 25 empty empty empty 5 12 0 14 -233017 -66577
0;
#X obj 253 170 cnv 15 200 25 empty empty empty 5 12 0 14 -233017 -66577
0;
#X obj 500 86 v a;
#X obj 179 281 cnv 15 260 50 empty empty empty 5 12 0 14 -233017 -66577
0;
#X text 187 295 H(z) =;
#X obj 251 212 cnv 15 200 25 empty empty empty 5 12 0 14 -233017 -66577
0;
#X text 338 284 Y(z);
#X text 305 291 _________________;
#X obj 160 422 cnv 15 270 55 empty empty empty 5 12 0 14 -261234 -66577
0;
#X text 172 440 H(z) =;
#X text 229 425 Y(z);
#X text 230 448 X(z);
#X text 221 433 _______;
#X text 294 433 _________________;
#X text 279 439 =;
#X text 337 426 1;
#X text 306 450 1 - a * z^-1;
#X text 105 86 y[n] = x[n] + a * y[n-1];
#X obj 301 86 fexpr~ $x[0] + a * $y[-1];
#X text 258 173 Y(z) = X(z) + a * Y(z)z^-1;
#X text 257 216 X(z) = Y(z) - a * Y(z)z^-1;
#X text 309 308 Y(z) - a * z^-1;
#X text 245 283 Y(z);
#X text 246 306 X(z);
#X text 237 291 _______;
#X text 292 296 =;
#X text 114 45 This is from the same 1st order IIR filter of equation:
;
#X text 110 133 On to the transfer function;
#X text 148 215 Isolate X[z]:;
#X text 33 296 Transfer function:;
#X text 123 361 Now we cancel Y(z) and end up with:;
#X restore 699 395 pd IIR;
#X text 27 295 The filter action can be defined as an Impulse Response
\, as we've seen with convolution. So y(n) = x(n) * [h(n)., f 56;
#X text 91 354 Note that "*" represents convolution \, not multiplication
- this is the official mathematical symbol for convolution by the way
\, and "x" is for multiplication., f 41;
#X text 470 250 This means the Z Transform of the IR - H(z) - is equal
to the Z Transform of the filter output - Y(z) - divided by the Z Transform
of the filter input - X(z)., f 56;
#X text 30 14 The transfer function is another equation we can use
(besides difference equations) to define filters and is useful to calculate
the filter's response., f 53;
#X text 30 69 It's a function of "z" \, as in: "H(z)". We use "z" instead
of "n" but in practice it's the same thing and defines sample delays
(where z^-1 = n-1)., f 53;
#X text 30 122 But in technical terms \, "z" is a complex frequency
from the Z Transform (a generalization of the Fourier Transform). But
we don't need to get too technical about it., f 53;
#X text 466 325 Check the subpatches below to see how to get the transfer
function from difference equations. Note that IIR filters have a denominator
in the transfer function \, but FIR filters don't.;
