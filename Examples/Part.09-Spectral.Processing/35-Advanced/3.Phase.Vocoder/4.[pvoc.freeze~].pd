#N canvas 601 82 507 661 12;
#X declare -path else;
#N canvas 673 189 440 375 pvoc-freeze 0;
#X obj 163 306 outlet~;
#X obj 134 31 inlet~;
#N canvas 357 169 738 364 Freeze 0;
#X obj 81 299 outlet~;
#X obj 291 296 outlet~;
#X obj 76 19 inlet~;
#X obj 236 164 tabwrite~ \$0-front;
#X obj 76 198 tabwrite~ \$0-back;
#X obj 81 271 tabreceive~ \$0-back;
#X obj 291 269 tabreceive~ \$0-front;
#X obj 236 112 bng 25 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X obj 76 140 ffdelay~ 512;
#X obj 236 80 r \$0-freeze;
#X obj 238 227 table \$0-back 2048;
#X obj 238 206 table \$0-front 2048;
#X text 414 83 Here's the new information of the patch \, we just take
snapshots by writing the input into two tables. The back grain is
obtained by a delay., f 40;
#X connect 2 0 3 0;
#X connect 2 0 8 0;
#X connect 5 0 0 0;
#X connect 6 0 1 0;
#X connect 7 0 4 0;
#X connect 7 0 3 0;
#X connect 8 0 4 0;
#X connect 9 0 7 0;
#X restore 134 63 pd Freeze;
#X obj 273 238 block~ 2048 4;
#X obj 163 272 /~ 3072;
#X obj 163 211 rifft~;
#X obj 122 138 rfft~;
#X obj 194 138 rfft~;
#X obj 122 113 hann~;
#X obj 194 114 hann~;
#X obj 163 239 hann~;
#X text 237 171 Same old...;
#N canvas 377 157 654 496 Phase.Accum 0;
#X obj 205 427 outlet~;
#X obj 426 424 outlet~;
#X obj 205 322 expr~ ($v1 * $v3) - ($v2 * $v4) \; ($v2 * $v3) + ($v1
* $v4);
#X obj 243 34 inlet~;
#X obj 296 34 inlet~;
#X obj 375 34 inlet~;
#X obj 426 34 inlet~;
#X obj 75 123 expr~ ($v1 * $v3) + ($v2 * $v4) \; ($v2 * $v3) - ($v1
* $v4);
#N canvas 228 78 542 340 phase_lock 0;
#X obj 385 133 lrshift~ 1;
#X obj 300 133 lrshift~ -1;
#X obj 285 225 +~;
#X obj 285 255 outlet~;
#X obj 283 47 inlet~;
#X obj 300 189 +~;
#X obj 157 137 lrshift~ 1;
#X obj 72 137 lrshift~ -1;
#X obj 57 229 +~;
#X obj 57 259 outlet~;
#X obj 55 51 inlet~;
#X obj 72 193 +~;
#X connect 0 0 5 1;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 4 0 1 0;
#X connect 4 0 2 0;
#X connect 5 0 2 1;
#X connect 6 0 11 1;
#X connect 7 0 11 0;
#X connect 8 0 9 0;
#X connect 10 0 6 0;
#X connect 10 0 7 0;
#X connect 10 0 8 0;
#X connect 11 0 8 1;
#X restore 138 219 pd phase_lock;
#X obj 448 390 tabsend~ \$0-re;
#X obj 458 367 tabsend~ \$0-im;
#X obj 42 52 tabreceive~ \$0-re;
#X obj 99 77 tabreceive~ \$0-im;
#N canvas 362 104 559 245 norm 0;
#X obj 352 180 outlet~;
#X obj 57 187 outlet~;
#X obj 317 31 inlet~;
#X obj 68 29 inlet~;
#X obj 57 127 expr~ $v1 / sqrt(pow ($v1 \, 2) + pow($v2 \, 2)) \; $v2
/ sqrt(pow ($v1 \, 2) + pow($v2 \, 2)) \;;
#X obj 68 71 expr~ if($v1 == 0 && $v2 == 0 \, 1 \, $v1) \; $v2;
#X connect 2 0 5 1;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X restore 180 265 pd norm;
#X obj 467 204 table \$0-re 1024;
#X obj 467 223 table \$0-im 1024;
#X connect 2 0 0 0;
#X connect 2 0 9 0;
#X connect 2 1 1 0;
#X connect 2 1 10 0;
#X connect 3 0 7 2;
#X connect 4 0 7 3;
#X connect 5 0 2 2;
#X connect 6 0 2 3;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 13 0;
#X connect 8 1 13 1;
#X connect 11 0 7 0;
#X connect 12 0 7 1;
#X connect 13 0 2 0;
#X connect 13 1 2 1;
#X restore 131 173 pd Phase.Accum;
#X text 81 111 back;
#X text 239 114 front;
#X text 214 63 <= open;
#X connect 1 0 2 0;
#X connect 2 0 8 0;
#X connect 2 1 9 0;
#X connect 4 0 0 0;
#X connect 5 0 10 0;
#X connect 6 0 12 0;
#X connect 6 1 12 1;
#X connect 7 0 12 2;
#X connect 7 1 12 3;
#X connect 8 0 6 0;
#X connect 9 0 7 0;
#X connect 10 0 4 0;
#X connect 12 0 5 0;
#X connect 12 1 5 1;
#X restore 125 382 pd pvoc-freeze;
#X obj 307 304 s \$0-freeze;
#X obj 264 280 tgl 30 0 empty empty empty 17 7 0 10 -228856 -1 -1 0
1;
#X obj 99 456 out~;
#X obj 99 422 xfade~ 1;
#X obj 264 398 f2s~ 200;
#X text 39 54 Now here's a freeze patch based on the phase accumulation
and time stretch (when the speed is equal to zero). We just take snapshots
of the input sound and send them to tables that are considered the
front and back grains and perform the phase accumulation. The thing
is that the output is always frozen \, but we freeze and unfreeze by
crossfading.;
#X text 41 159 The bang freezes the audio \, but can also furtherly
used to take other snapshots. To unfreeze \, just use the toggle.;
#X text 69 382 open =>;
#X obj 264 373 expr if($f1 == 0 \, -1 \, $f1);
#X obj 307 276 sel 1;
#X msg 264 224 1;
#X msg 307 224 0;
#X obj 211 608 pvoc.freeze~;
#X text 66 552 The [pvoc.freeze~] object \, from the ELSE librayry
\, is based on this patch. Check its help file, f 55;
#X obj 318 22 declare -path else;
#X obj 99 338 play.file~ 1 violin.wav 1 1;
#X connect 0 0 4 1;
#X connect 2 0 9 0;
#X connect 4 0 3 0;
#X connect 5 0 4 2;
#X connect 9 0 5 0;
#X connect 10 0 1 0;
#X connect 11 0 10 0;
#X connect 11 0 2 0;
#X connect 12 0 2 0;
#X connect 16 0 0 0;
#X connect 16 0 4 0;
