#N struct 1016-point float x0 float y0 float size float fg float in float grid;
#N canvas 301 38 898 676 12;
#X declare -path else;
#X obj 248 210 noise~;
#N canvas 207 34 366 264 (subpatch) 0;
#X obj 51 101 tgl 42 0 \$0-tgl-s \$0-tgl-r empty 1 8 1 9 #dcdcdc #7c7c7c #fcfcfc 0 1;
#X obj 215 68 route dsp;
#X obj 215 37 receive pd;
#N canvas 977 77 379 291 set_color 0;
#X obj 47 30 inlet;
#X obj 147 200 s \$0-cnv;
#X obj 47 83 select 0 1;
#X obj 47 220 s \$0-tgl-r;
#N canvas 0 22 712 637 off 0;
#X obj 490 220 * -1;
#X obj 424 300 +;
#X obj 409 325 +;
#X obj 347 219 * -65536;
#X obj 424 220 * -256;
#X obj 409 356 - 1;
#X obj 390 189 unpack f f f;
#X obj 225 295 +;
#X obj 210 320 +;
#X obj 148 214 * -65536;
#X obj 225 215 * -256;
#X obj 291 215 * -1;
#X obj 210 351 - 1;
#X obj 191 184 unpack f f f;
#X obj 379 423 pack;
#X msg 395 152 124 124 124;
#X msg 203 154 220 220 220;
#X obj 238 121 t b b;
#X obj 238 81 inlet;
#X obj 378 485 outlet;
#X connect 0 0 1 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 14 1;
#X connect 6 0 3 0;
#X connect 6 1 4 0;
#X connect 6 2 0 0;
#X connect 7 0 8 1;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 7 1;
#X connect 12 0 14 0;
#X connect 13 0 9 0;
#X connect 13 1 10 0;
#X connect 13 2 11 0;
#X connect 14 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 13 0;
#X connect 17 0 16 0;
#X connect 17 1 15 0;
#X connect 18 0 17 0;
#X restore 47 113 pd off;
#X msg 47 180 color \$1 \$2 0;
#X msg 147 131 -4.86997e+06 -1.34937e+07;
#X msg 147 171 color \$1 0 \$2;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X restore 215 165 pd set_color;
#X obj 135 122 r \$0-tgl-s;
#N canvas 121 482 450 300 (subpatch) 0;
#X obj 101 101 cnv 25 40 25 empty \$0-cnv DSP 3 13 0 20 #dcdcdc #7c7c7c 0;
#X coords 0 -1 1 1 42 27 1 100 100;
#X restore 51 144 pd;
#X obj 226 139 s \$0-tgl-r;
#X msg 226 115 set \$1;
#X msg 135 177 \; pd dsp \$1;
#N canvas 256 32 278 194 load_check 0;
#X obj 136 53 sig~ 1;
#X obj 74 24 loadbang;
#X obj 136 86 snapshot~;
#X obj 91 52 del 5;
#X obj 136 151 outlet;
#X obj 74 103 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 74 126 switch~;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 5 0 6 0;
#X restore 51 72 pd load_check;
#X connect 1 0 3 0;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 4 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 9 0 0 0;
#X coords 0 -1 1 1 44 72 2 50 100;
#X restore 413 344 pd;
#X obj 246 294 else/meter4~;
#X obj 248 254 pan~ 4, f 14;
#X obj 127 166 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X floatatom 124 192 8 0 0 0 - - - 0;
#X obj 61 199 noise~;
#X text 158 165 azimuth;
#X obj 124 215 f2s~;
#X obj 61 243 pan~, f 14;
#X obj 61 299 meter2~;
#X text 41 25 The [pan~] object has an arbitrary number of outputs (minimum of 2 \, which is the default). One big difference from the previous ones is that the panning position is circular and from 0 to 1 \, which means it goes back to 0 when reaching 1!, f 64;
#X text 41 89 The speakers are supposedly disposed in a circular setting with equidistant angles \, so the position can then be considered an azimuth angle input., f 64;
#X obj 61 455 out~;
#X obj 311 194 phasor~ 0.1;
#X obj 311 223 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 690 44 declare -path else;
#X text 198 459 Another important feature is the "spreading" parameter \, which you will also find in other similar and related routing objects from now on., f 44;
#X text 406 194 spread;
#X obj 411 219 knob 50 0.5 2 1 1 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 1;
#X obj 411 282 f2s~ 10 1;
#X obj 411 306 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X text 27 534 Spread values greater than 1 spreads the signal to more than 2 adjacent channels. A spread value of two will spread the input to the 2 adjacent channels (to the right and to the left) with an amplidute of the square root of 0.5! Values smaller than 1 narrows the crossfading point closer to the selected channel. A value of 0.5 provides no actual crossfading \, meaning that 2 adjacent channels get muted at the mid point. Values smaller than 0.5 are possible and it narrows down even more at the channel center., f 71;
#X obj 652 393 noise~;
#X obj 646 483 else/meter8~;
#X obj 705 226 else/circle 127 -1 1 -1 1 1 255 255 255 255 255 255 0 0 0 1 0 0 0 1 empty empty 1;
#X obj 653 441 pan~ -radians 8 1 90, f 23;
#X obj 705 395 f2s~;
#X obj 758 394 f2s~;
#X obj 705 367 car2pol;
#X obj 705 193 initmess 0 1;
#X text 556 87 There's also a gain inupt and you can use the [circle] object to control it \, just convert to polar and have the input angle in radians. More details in the help file of the object., f 41;
#X text 572 246 see also the multichannel version:, f 12;
#X obj 582 307 pan.mc~;
#X connect 0 0 3 0;
#X connect 3 0 2 0;
#X connect 3 1 2 1;
#X connect 3 2 2 2;
#X connect 3 3 2 3;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 8 0 9 2;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 13 0;
#X connect 10 1 13 1;
#X connect 14 0 15 0;
#X connect 15 0 3 2;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 20 0 3 3;
#X connect 23 0 26 0;
#X connect 25 0 29 0;
#X connect 26 0 24 0;
#X connect 26 1 24 1;
#X connect 26 2 24 2;
#X connect 26 3 24 3;
#X connect 26 4 24 4;
#X connect 26 5 24 5;
#X connect 26 6 24 6;
#X connect 26 7 24 7;
#X connect 27 0 26 1;
#X connect 28 0 26 2;
#X connect 29 0 27 0;
#X connect 29 1 28 0;
#X connect 30 0 25 0;
