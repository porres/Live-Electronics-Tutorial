#N canvas 374 68 887 517 12;
#X declare -path else;
#X obj 137 239 hsl 200 19 0 7 0 0 empty \$0-slider empty -2 -8 0 10 #dcdcdc #000000 #000000 0 0;
#X obj 186 298 expr interpolation[i] \; interpolation[i + 1] \; $f1 - i \; int($f1);
#X obj 134 271 t b f;
#X obj 286 395 v frac;
#X obj 337 395 v i;
#X floatatom 134 475 8 0 0 0 - - value 0;
#X obj 134 447 expr a * (1 - frac) + (b * frac);
#X obj 186 395 v a;
#X obj 236 395 v b;
#X text 191 417 i;
#X text 236 417 i+1;
#X floatatom 186 368 0 0 0 0 - - - 0;
#X floatatom 236 368 0 0 0 0 - - - 0;
#X floatatom 286 368 4 0 0 0 - - - 0;
#X floatatom 337 368 0 0 0 0 - - - 0;
#X obj 598 244 cnv 15 198 198 empty 1003-lin . -13 -10 0 44 #f8f8f8 #fc0400 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array interpolation 8 float 0;
#X coords 0 1 7 -1 200 200 1 0 0;
#X restore 597 243 graph;
#N canvas 889 263 439 311 plot 0;
#X msg 151 237 label_pos \$2 \$1;
#X obj 151 211 pack;
#X obj 117 123 r value;
#X obj 117 149 * -100;
#X obj 182 131 / 7;
#X obj 182 107 r index;
#X obj 117 176 + 90;
#X obj 181 185 - 13;
#X obj 181 158 * 200;
#X obj 151 265 s \$0-lin;
#X obj 38 26 initmess \; interpolation 0 1 0 0.7 -0.3 0 -1 1 0 \, xticks 0 1 1 \, xlabel -1.1 0 1 2 3 4 5 6 7, f 52;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X restore 744 224 pd plot;
#X obj 186 276 nbx 5 14 -1e+37 1e+37 0 0 index empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 676 475 (n = 8);
#X text 246 274 index;
#X text 283 417 fractional part;
#X text 366 394 integer index;
#X text 198 475 Linear interpolation between "a" & "b";
#X text 522 67 At least two points are needed for interpolation such as in a linear interpolation. Arrays in Pd that are drawn as polygons do visually display a linear interpolation to connect the array's points., f 48;
#X obj 712 27 declare -path else;
#X obj 352 298 initmess \; \$0-slider 0;
#X text 19 19 A sound file is an array of samples \, where each index corresponds to a sampled amplitude value. The [readsf~] object does not interpolate so it can only play the file at the same speed Pd is running or multiple ones (twice as fast / twice as slow \, etc). Interpolation makes it possible to play at different speeds \, such as 1.5x faster \, as it'll find such fractional mid values between samples., f 67;
#X text 522 154 Let's see this example with an 8 points array. Below we calculate the linear interpolation (indicated by the red dot)., f 48;
#X text 19 125 An index of 1.5 is a mid point between values 1 and 2 \, so we get a value that would correspond to it. The simplest form is linear interpolation \, where get a line is drawn between the samples and a linear difference is taken to correspond to the fraction. So \, for 1.5 \, the mid point between the line drawn from index 1 and 2 is taken. See example below., f 67;
#X connect 0 0 2 0;
#X connect 1 0 11 0;
#X connect 1 1 12 0;
#X connect 1 2 13 0;
#X connect 1 3 14 0;
#X connect 2 0 6 0;
#X connect 2 1 18 0;
#X connect 6 0 5 0;
#X connect 11 0 7 0;
#X connect 12 0 8 0;
#X connect 13 0 3 0;
#X connect 14 0 4 0;
#X connect 18 0 1 0;
