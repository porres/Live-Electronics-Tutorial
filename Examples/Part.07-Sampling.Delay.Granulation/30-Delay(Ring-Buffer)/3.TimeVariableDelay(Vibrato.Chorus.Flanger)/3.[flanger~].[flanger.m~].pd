#N canvas 223 59 1191 599 12;
#X declare -path else;
#X obj 350 452 loadbang;
#X obj 46 310 s~ \$0-in;
#X obj 46 252 sig~ 40;
#X obj 46 226 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 548 135 r~ \$0-in;
#X obj 695 412 r~ \$0-in;
#X obj 832 439 r~ \$0-fb;
#X obj 322 322 hsl 128 15 -0.999 0.999 0 0 empty fb empty -2 -6 0 8 #dcdcdc #000000 #000000 0 1;
#X text 353 321 feedback;
#X floatatom 319 344 0 0 0 0 - - - 0;
#X floatatom 133 231 5 0 0 0 - - - 0;
#X floatatom 248 300 5 0 75 0 - - - 0;
#X floatatom 181 259 5 1 100 0 - - - 0;
#X obj 136 209 hsl 128 15 0.01 3 1 0 empty rate empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 185 208 rate;
#X obj 251 277 hsl 128 15 5 75 1 0 empty delmax empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 184 237 hsl 128 15 0 8 0 0 empty delmin empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X text 222 236 delay min.;
#X text 281 276 delay max.;
#X obj 133 265 osc~;
#X obj 47 342 r~ \$0-in;
#X text 48 202 Input;
#X obj 319 401 s~ \$0-fb;
#X obj 720 133 r~ \$0-in;
#X obj 843 163 r~ \$0-fb;
#X msg 350 483 \; rate 0.07 \; delmin 0.1 \; delmax 8 \; fb 0.9;
#X msg 241 483 \; rate 0.04 \; delmin 0.4 \; delmax 16 \; fb -0.8;
#X obj 96 494 out~;
#X obj 740 503 out~;
#X obj 740 469 comb.rev~ 75 1 1 0;
#X obj 548 194 comb.rev~ 75 1 1 0;
#X obj 720 192 comb.rev~ 75 1 1 0;
#X obj 720 224 out~;
#X obj 548 226 out~;
#X obj 155 326 rescale~;
#X obj 46 282 bl.saw~;
#X obj 181 283 f2s~ 10;
#X obj 248 323 f2s~ 10;
#X obj 319 367 f2s~ 10;
#X obj 557 501 out~;
#X obj 557 438 r~ \$0-in;
#X obj 175 363 s~ \$0-lfo;
#X obj 578 164 r~ \$0-lfo;
#X obj 750 162 r~ \$0-lfo;
#X obj 770 412 r~ \$0-lfo;
#X text 35 19 Originally \, the Flanger FX was developed by holding the "flange" of a tape roll to change its speed \, then mix with the original signal \, which generates phase cancelling because of the phase differences between the original and the delayed signal., f 61;
#X text 240 463 Presets:;
#X obj 557 469 flanger~ 0.1 10 0.8;
#X text 35 95 A flanger can be implemented with both a feedforward and a feedback delay line. First \, let's see an example with just a single feedback line below (the same as last example). The rate is the frequency of the LFO that controls the delay time in ms \, and a "depth" is given by the minimum and maximum delay times., f 61;
#X text 530 108 feedforward flanger;
#X text 719 108 feedback flanger;
#X obj 1006 35 declare -path else;
#X text 529 26 The [comb.rev~] object below now uses just a feedforward line for a feedforward flanger \, but also just a feedback line as the patch to the right., f 45;
#X text 498 292 And now for a flanger with both feedforward and feedback lines. Note that a negative feedback value can cancel the feed forward line because of the polarity inversion. We avoid it by using the same coefficient for both feed forward and feed back lines. This is the basis of the simple [flanger~] object from the ELSE library \, which takes directly a rate \, depth and coefficient values \, check its help file., f 56;
#X obj 97 404 fbdelay~ -gain 75;
#X obj 987 265 flanger.m~;
#A saved 0.101084 5.08997 0.536585 0.719512;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 987 221 r~ \$0-in;
#X obj 987 507 out~;
#X text 952 93 The [flanger.m~] object is a MERDA module based on [flanger~] and it also has a Dry/Wer knob that mixes the original and processed signal., f 26;
#X connect 0 0 25 0;
#X connect 2 0 35 0;
#X connect 3 0 2 0;
#X connect 4 0 30 0;
#X connect 5 0 29 0;
#X connect 6 0 29 4;
#X connect 6 0 29 3;
#X connect 7 0 9 0;
#X connect 9 0 38 0;
#X connect 10 0 19 0;
#X connect 11 0 37 0;
#X connect 12 0 36 0;
#X connect 13 0 10 0;
#X connect 15 0 11 0;
#X connect 16 0 12 0;
#X connect 19 0 34 0;
#X connect 20 0 54 0;
#X connect 23 0 31 0;
#X connect 24 0 31 4;
#X connect 29 0 28 0;
#X connect 30 0 33 0;
#X connect 31 0 32 0;
#X connect 34 0 41 0;
#X connect 34 0 54 1;
#X connect 35 0 1 0;
#X connect 36 0 34 1;
#X connect 37 0 34 2;
#X connect 38 0 22 0;
#X connect 38 0 54 2;
#X connect 40 0 47 0;
#X connect 42 0 30 1;
#X connect 43 0 31 1;
#X connect 44 0 29 1;
#X connect 47 0 39 0;
#X connect 54 0 27 0;
#X connect 55 0 57 0;
#X connect 56 0 55 0;
