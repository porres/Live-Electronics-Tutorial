#N canvas 337 119 871 454 12;
#X declare -path else;
#X obj 219 238 vsl 16 80 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 104 211 *~;
#X obj 54 155 osc~ 440;
#X obj 104 260 out~;
#X obj 662 321 vsl 16 80 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 544 280 *~;
#X obj 478 216 osc~ 440;
#X obj 544 329 out~;
#X obj 122 128 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 219 212 s2f~;
#X obj 662 295 s2f~;
#X obj 675 42 declare -path else;
#X obj 501 74 bng 21 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 501 102 float2imp~;
#X obj 755 160 bng 19 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 755 186 float2imp~ 1;
#X obj 562 160 tgl 20 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 588 159 gate;
#X obj 562 188 sig~;
#X text 682 159 retrigger;
#X text 27 21 The AHDSR ("Attack / Hold / Decay / Sustain / Release") envelope expands a bit on the structure of ADSR and adds a "hold" stage at the peak of the attack. For this and other more sophisticated and custom envelope generators we need to use [envgen~], f 56;
#X text 149 129 AHDSR;
#X obj 122 160 envgen~ 100 1 250 1 50 0.75 500 0.5 500 0;
#X obj 501 129 timed.gate~ 2500;
#X text 535 75 a timed gate;
#X obj 706 271 numbox~ 6 12 100 #C0C0C4 #440008 10 0 0 0;
#X obj 562 217 envgen~ -suspoint 3 -curve 1 100 1 500 1 250 0.5 200 0, f 28;
#X text 58 346 Now \, to the right \, with an exponential curve and a signal "gate" input to control the sustain stage. Note that in this case you can also retrigger with an impulse in the right inlet when sustaining., f 51;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 8 0 22 0;
#X connect 9 0 0 0;
#X connect 10 0 4 0;
#X connect 12 0 13 0;
#X connect 13 0 23 0;
#X connect 14 0 15 0;
#X connect 15 0 26 1;
#X connect 16 0 18 0;
#X connect 18 0 26 0;
#X connect 22 0 1 1;
#X connect 22 0 9 0;
#X connect 23 0 26 0;
#X connect 26 0 5 1;
#X connect 26 0 10 0;
