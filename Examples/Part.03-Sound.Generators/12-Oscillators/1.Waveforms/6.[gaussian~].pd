#N canvas 420 47 790 562 12;
#X declare -path else;
#X obj 96 163 nbx 5 14 -1e+37 1e+37 0 0 empty hz empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 161 242 out~;
#X obj 140 307 graph~ 441 30;
#X obj 631 26 declare -path else;
#X obj 139 210 gaussian~ 150;
#X obj 171 151 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 168 178 f2s~ 10;
#X text 35 24 The [gaussian~] oscillator from ELSE has a gaussian waveform \, which has a "bell curve" shape. The width of the bell is controlled via the 2nd inlet. The higher this value \, the narrower the bell is and the closer it is to an impulse! Check its help file for more info., f 52;
#X obj 459 195 -~ 0.5;
#X obj 459 167 phasor~ 2;
#X obj 459 258 expr~ exp(-$v1*$v1);
#X obj 546 166 pow 4;
#X obj 549 145 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 546 214 + 4;
#X obj 546 190 * 296;
#X obj 459 225 *~ 4;
#X text 449 61 This is a way to implement this as a patch. More details about the formula and function is given in the envelope section of this tutorial., f 43;
#X text 116 507 See also the [tabgen] object which can generate a Gaussian function., f 68;
#X obj 619 509 tabgen;
#X obj 459 298 scope~ 280 152 256 3 128 -1 1 0 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X connect 0 0 4 0;
#X connect 4 0 1 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 4 1;
#X connect 8 0 15 0;
#X connect 9 0 8 0;
#X connect 10 0 19 0;
#X connect 11 0 14 0;
#X connect 12 0 11 0;
#X connect 13 0 15 1;
#X connect 14 0 13 0;
#X connect 15 0 10 0;
