#N canvas 218 47 910 493 12;
#X declare -path else;
#X obj 727 31 declare -path else;
#X obj 337 95 meter;
#X floatatom 337 134 5 0 0 0 - - - 0;
#X msg 119 273 pd~ start patch.pd;
#X floatatom 119 427 5 0 0 0 - - - 0;
#X obj 375 305 setdsp~;
#X text 27 15 The pd~ object starts a new Pd instance \, which takes advantage of multi-core CPUs and can \, therefore \, be used to divide the cost of CPU intensive patches. You can have more than a pd~ object but each one can only open one patch at a time., f 62;
#X text 330 264 DSP needs to be on in this patch., f 17;
#X text 43 91 The meter object from the ELSE library reports the percentage of the CPU usage of this Pd process., f 39;
#X text 40 175 Below we have a CPU intensive patch. The outlet reports the output of meter and you can see that the CPU measure of this other Pd process is greater than the measure in this patch.;
#X text 55 426 CPU % =>;
#X text 383 135 <= CPU %;
#X text 48 251 click to open a new instance:, f 19;
#X obj 200 408 out~;
#X msg 150 332 tempo \$1;
#X floatatom 150 305 5 0 0 0 - - - 0;
#X text 215 331 <= send control;
#X text 236 344 messages, f 12;
#X obj 119 377 pd~ -ninsig 0 -noutsig 2;
#X obj 627 395 abs.pd~;
#X msg 627 355 start patch.pd;
#X text 504 70 You can set the number of audio inputs/outputs with the -nsinsig and -noutsig flags \, which will change the number of inlets/outlets and will communicate internally with [adc~] and [dac~] objects. In this example we don't need an audio input so we have "-ninsig 0" - this still gives us an inlet for sending control messages. The first outlet is always a control outlet and gets messages from "stdout" objects. Check the subprocess' patch. Check [pd~]'s help file for more details., f 52;
#X text 504 221 Note that the ELSE library includes the [abs.pd~] abstraction \, which is based on [pd~] and offers some conveniences like being able to click on it and open the patch as if it were an abstraction. It also provides support for MIDI input., f 52;
#X connect 1 0 2 0;
#X connect 3 0 18 0;
#X connect 14 0 18 0;
#X connect 15 0 14 0;
#X connect 18 0 4 0;
#X connect 18 1 13 0;
#X connect 18 2 13 1;
#X connect 20 0 19 0;
