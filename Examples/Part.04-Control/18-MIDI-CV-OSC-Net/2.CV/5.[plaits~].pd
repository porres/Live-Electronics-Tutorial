#N canvas 362 38 1050 682 12;
#X declare -path else;
#X obj 824 30 declare -path else;
#X obj 194 202 keyboard 17 80 3 3 0 0 empty empty;
#X listbox 194 296 9 0 0 0 - - - 0;
#X obj 311 382 - 60;
#X obj 194 329 stripnote;
#X obj 67 549 out~;
#X text 46 28 The [plaits~] object from the ELSE library ports a famous eurorack module to Pure Data. Check its help file. It contains many synthesis techniques \, most of which are presented in this tutorial., f 75;
#X obj 194 549 out~;
#X text 200 385 input directly in MIDI pitch., f 8;
#X obj 194 495 plaits~ -midi 60, f 9;
#X obj 311 549 out~;
#X floatatom 311 455 8 0 0 0 - - - 16;
#X obj 311 495 plaits~ -cv;
#X text 398 458 CV;
#X obj 311 413 / 60;
#X obj 67 495 plaits~, f 10;
#X obj 67 417 mtof;
#X text 152 458 Hz;
#X floatatom 67 455 8 0 0 0 - - - 16;
#X text 46 79 The code of this original module takes pitch input in CV (so \, V/oct) taking into consideration an explicit voltage value in the -5v to 5v range. For this Pd object though this has been disconsidered. Instead \, a 'cv' input with audio signal is from -1 to 1 \, where The 0V referenceis middle C (MIDI Pitch 60). The object can also take frequency input in MIDI or herts (the default)., f 75;
#X text 352 393 convert MIDI to "CV";
#X obj 566 337 plaits.m~;
#A saved 0 0.5 0.5 0.5 0 0.5 0.5 0 0 0 0 1 0 1;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#A saved;
#X obj 566 611 out~;
#X text 655 73 So far this is the only object in ELSE that takes a sort of 'CV' input in Pd's audible signal range (-1 to 1). This is more of a curiosity and something in respect to the original code. We also have 'CV' like input and treatment with the MERDA modules \, and we'll see more about that on the next example. As for the MERDA version of plaits ([plaits.m~] below) \, the frequency input is in MIDI \, directly \, either via control messages or audio signals., f 44;
#X text 654 240 Hence \, in MERDA \, there's no real V/octave CV input!, f 44;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 0 21 0;
#X connect 3 0 14 0;
#X connect 4 0 3 0;
#X connect 4 0 9 0;
#X connect 4 0 16 0;
#X connect 9 0 7 0;
#X connect 9 1 7 1;
#X connect 11 0 12 0;
#X connect 12 0 10 0;
#X connect 12 1 10 1;
#X connect 14 0 11 0;
#X connect 15 0 5 0;
#X connect 15 1 5 1;
#X connect 16 0 18 0;
#X connect 18 0 15 0;
#X connect 21 0 22 0;
