#N canvas 279 35 940 601 12;
#X declare -path else;
#X obj 115 221 pgmin;
#X obj 109 197 bendin;
#X obj 101 247 touchin;
#X obj 73 273 polytouchin;
#X obj 224 396 midiin;
#X obj 164 148 noteout;
#X obj 164 172 ctlout;
#X obj 164 197 bendout;
#X obj 165 247 touchout;
#X obj 165 273 polytouchout;
#X obj 219 431 midiout;
#X obj 165 222 pgmout;
#X obj 109 148 notein;
#X obj 115 172 ctlin;
#X text 265 222 Program;
#X text 266 248 Aftertouch;
#X obj 136 332 sysexin;
#X obj 94 307 midirealtimein;
#X text 264 197 Pitch Bend;
#X text 662 294 Program;
#X text 662 266 Pitch Bend;
#X obj 524 209 note.in;
#X obj 530 239 ctl.in;
#X obj 524 267 bend.in;
#X obj 530 296 pgm.in;
#X obj 516 322 touch.in;
#X obj 585 322 touch.out;
#X obj 585 297 pgm.out;
#X obj 584 267 bend.out;
#X obj 585 239 ctl.out;
#X obj 584 210 note.out;
#X obj 517 376 sysrt.in;
#X text 264 171 Control;
#X text 266 272 Poliphonic Aftertouch;
#X text 66 384 There are also MIDI objects that deal with raw MIDI data:, f 20;
#X text 278 383 all types but system/real time & sysex, f 14;
#X text 662 238 Control;
#X text 482 112 They offer advantages/conveneiences like allowing to change the MIDI channel in which messages are coming through. In some cases there are also more functionalities than the native counterparts \, such as the ability to deal with release velocity in [note.in] / [note.out]., f 60;
#X text 483 413 The fact that these objects deal with raw MIDI also makes them useful to write and read MIDI data from the [midi] object \, also provided in the ELSE library. We'll see that in the next section.;
#X obj 762 22 declare -path else;
#X text 27 15 Pd has several nastive objects that deal with MIDI. We only used [notein] and MIDI note messages in this series \, but there are many other MIDI messages we could use to control a patch. Conversely \, we can create and maniplate MIDI data in a patch and send it out with MIDI out objects., f 57;
#X text 27 105 Here are Pd native objects for MIDI \, separated into MIDI message types., f 57;
#X text 482 61 The ELSE library also has MIDI objects \, but they receive and send raw MIDI data. This means they can be connected to [midiin] and [midiout] objects.;
#X text 191 332 sysex messages;
#X text 205 307 MIDI System & MIDI Real-time;
#X text 265 148 Note (on/off);
#X text 532 479 see also:;
#X obj 529 504 midi.learn;
#A saved;
#X text 615 496 An object from ELSE that makes it easier to set a MIDI controller., f 33;
#X obj 147 537 midi.in;
#X text 662 320 Channel Aftertouch;
#X obj 516 349 touch.in;
#X obj 585 349 touch.out;
#X text 662 349 Polyphonic Aftertouch;
#X obj 586 376 sysrt.out;
#X text 662 375 System real-time, f 20;
#X text 43 480 ELSE has [midi.in] and [midi.out] objects which output 'cooked' data instead of 'raw'. Check them out.;
#X obj 239 537 midi.out;
#X text 662 210 Note On and Note Off;
#X obj 557 544 mpe.in;
#X text 613 546 For MIDI Polyphonic Expression;
